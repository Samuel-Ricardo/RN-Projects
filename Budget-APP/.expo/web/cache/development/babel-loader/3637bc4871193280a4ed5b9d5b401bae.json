{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/Success.screen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport PropTypes from 'prop-types';\nimport fixStyles, { colors } from \"../styles/index.style\";\nimport { getHeightByPerc, getWidthByPerc } from \"../styles/StyleUtils.style\";\n\nvar Success = function (_React$PureComponent) {\n  _inherits(Success, _React$PureComponent);\n\n  var _super = _createSuper(Success);\n\n  function Success(props) {\n    var _this;\n\n    _classCallCheck(this, Success);\n\n    _this = _super.call(this, props);\n    _this.state = {}, _this._handleNextButton = _this._handleNextButton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Success, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"_handleNextButton\",\n    value: function _handleNextButton() {\n      this.props.navigator.resetTo({\n        screen: 'survey.Home',\n        animated: true,\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"_handleResultButton\",\n    value: function _handleResultButton() {\n      this.props.navigator.push({\n        screen: 'survey.Result',\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../resources/ic_background.jpg\"),\n        style: {\n          width: getWidthByPerc(100),\n          height: getHeightByPerc(100)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.questionContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1.5,\n          justifyContent: 'flex-end'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.questionCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.greatText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, \"Great !\"), React.createElement(View, {\n        style: [fixStyles.textUnderLine, {\n          marginVertical: 10\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.questionText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, \"Your budget is ready!\"), React.createElement(TouchableOpacity, {\n        style: [styles.nextButton, {\n          marginVertical: 20\n        }],\n        onPress: this._handleResultButton.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.buttonStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"SHOW ME\"))), React.createElement(View, {\n        style: {\n          flex: 1.5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, {\n          marginBottom: 10,\n          color: colors.white,\n          fontSize: 12,\n          textAlign: 'center'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"Feel Free to play around, Just press this button to reset\"), React.createElement(TouchableOpacity, {\n        style: [styles.nextButton, {\n          backgroundColor: 'transparent',\n          borderColor: colors.white,\n          borderWidth: 1\n        }],\n        onPress: this._handleNextButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.buttonStyle, {\n          color: colors.white\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, \"RETAKE THE TEST\"))))));\n    }\n  }]);\n\n  return Success;\n}(React.PureComponent);\n\nSuccess.navigatorStyle = {\n  statusBarColor: 'transparent',\n  statusBarTextColorScheme: 'light',\n  navBarHidden: true,\n  drawUnderStatusBar: true\n};\nvar styles = StyleSheet.create({\n  questionContainer: {\n    flex: 1,\n    paddingHorizontal: 20,\n    justifyContent: 'space-around',\n    width: getWidthByPerc(100),\n    height: getHeightByPerc(100)\n  },\n  questionCard: {\n    flex: 4,\n    marginTop: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  questionText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.white\n  },\n  nextButton: {\n    paddingVertical: 10,\n    backgroundColor: colors.white,\n    width: getWidthByPerc(100, 40)\n  },\n  buttonStyle: {\n    textAlign: 'center',\n    fontSize: 18,\n    color: colors.black\n  },\n  numberStyle: {\n    fontSize: 20,\n    color: colors.white\n  },\n  greatText: {\n    fontSize: 50,\n    color: colors.white,\n    fontWeight: 'bold'\n  }\n});\nexport default Success;","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/Success.screen.js"],"names":["React","PropTypes","fixStyles","colors","getHeightByPerc","getWidthByPerc","Success","props","state","_handleNextButton","bind","navigator","resetTo","screen","animated","navigatorStyle","navBarHidden","push","flex","require","width","height","styles","questionContainer","justifyContent","questionCard","fontContainer","greatText","textUnderLine","marginVertical","questionText","nextButton","_handleResultButton","buttonStyle","marginBottom","color","white","fontSize","textAlign","backgroundColor","borderColor","borderWidth","PureComponent","statusBarColor","statusBarTextColorScheme","drawUnderStatusBar","StyleSheet","create","paddingHorizontal","marginTop","alignItems","fontWeight","paddingVertical","black","numberStyle"],"mappings":"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","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 27/09/18.\n */\nimport React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, TextInput, ImageBackground } from 'react-native';\nimport PropTypes from 'prop-types';\nimport fixStyles, { colors } from '../styles/index.style';\nimport { getHeightByPerc, getWidthByPerc } from '../styles/StyleUtils.style';\n\n\n\n\nclass Success extends React.PureComponent {\n    static navigatorStyle = {\n        statusBarColor: 'transparent',\n        statusBarTextColorScheme: 'light',\n        navBarHidden: true,\n        drawUnderStatusBar: true\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n\n        },\n        this._handleNextButton = this._handleNextButton.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n\n    _handleNextButton() {\n        this.props.navigator.resetTo({\n            screen: 'survey.Home',\n            animated: true,\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n\n    _handleResultButton() {\n        this.props.navigator.push({\n            screen: 'survey.Result',\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n\n    render() {\n        return (\n            <View style={{ flex: 1}}>\n                <ImageBackground\n                    source={require('../resources/ic_background.jpg')}\n                    style={{ width: getWidthByPerc(100), height: getHeightByPerc(100) }}\n                >\n            <View style={styles.questionContainer}>\n                <View style={{ flex: 1.5, justifyContent: 'flex-end' }}>\n\n                </View>\n                <View style={styles.questionCard}>\n                    <Text style={[fixStyles.fontContainer, styles.greatText]}>Great !</Text>\n                    <View style={[fixStyles.textUnderLine, { marginVertical: 10 }]} />\n                    <Text style={[ fixStyles.fontContainer, styles.questionText ]}>Your budget is ready!</Text>\n                    <TouchableOpacity style={[styles.nextButton, { marginVertical: 20, }]} onPress={this._handleResultButton.bind(this)}>\n                        <Text style={[fixStyles.fontContainer, styles.buttonStyle,  ]}>SHOW ME</Text>\n                    </TouchableOpacity>\n                </View>\n\n                <View style={{ flex: 1.5  }}>\n                    <Text style={[fixStyles.fontContainer, { marginBottom: 10, color: colors.white, fontSize: 12, textAlign: 'center' }]}>Feel Free to play around, Just press this button to reset</Text>\n                    <TouchableOpacity style={[styles.nextButton, {  backgroundColor: 'transparent', borderColor: colors.white, borderWidth: 1 }]} onPress={this._handleNextButton}>\n                        <Text style={[fixStyles.fontContainer, styles.buttonStyle, { color: colors.white } ]}>RETAKE THE TEST</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n\n                </ImageBackground>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    questionContainer: {\n        flex: 1,\n        paddingHorizontal: 20,\n        justifyContent: 'space-around',\n        width: getWidthByPerc(100),\n        height: getHeightByPerc(100)\n    },\n    questionCard: {\n        flex: 4,\n        marginTop: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    questionText: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: colors.white\n    },\n    nextButton: {\n        paddingVertical:10,\n        backgroundColor: colors.white,\n        width: getWidthByPerc(100, 40),\n    },\n    buttonStyle: {\n        textAlign: 'center',\n        fontSize: 18,\n        color: colors.black,\n    },\n    numberStyle: {\n        fontSize: 20,\n        color: colors.white\n    },\n    greatText: {\n        fontSize: 50,\n        color: colors.white,\n        fontWeight: 'bold'\n    }\n});\n\nexport default Success;"]},"metadata":{},"sourceType":"module"}