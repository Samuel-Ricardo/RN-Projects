{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/Singup.screen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Item, Input, Button, Textarea } from 'native-base';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { Field, reduxForm } from 'redux-form';\nimport fixStyles, { colors } from \"../styles/index.style\";\nimport { getHeightByPerc, getWidthByPerc } from \"../styles/StyleUtils.style\";\nimport { serviceSignup } from \"../services/Auth.service\";\nimport { actionLoginUser } from \"../actions/Auth.action\";\nimport KeyboardManager from 'react-native-keyboard-manager';\n\nvar validate = function validate(values) {\n  console.log('Singup up values', values);\n  var errors = {};\n\n  if (!values.name) {\n    errors.name = 'Required';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  }\n\n  return errors;\n};\n\nvar SignupScreen = function (_React$PureComponent) {\n  _inherits(SignupScreen, _React$PureComponent);\n\n  var _super = _createSuper(SignupScreen);\n\n  function SignupScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignupScreen);\n\n    _this = _super.call(this, props);\n\n    _this.managePasswordVisibility = function () {\n      _this.setState({\n        hidePassword: !_this.state.hidePassword\n      });\n    };\n\n    _this.state = {\n      bottomButtonText: 'SIGN UP',\n      isWorking: false,\n      hidePassword: true\n    };\n    _this._handleNextButton = _this._handleNextButton.bind(_assertThisInitialized(_this));\n    _this._handleSubmitWrapper = _this._handleSubmitWrapper.bind(_assertThisInitialized(_this));\n    _this._handleLoginClick = _this._handleLoginClick.bind(_assertThisInitialized(_this));\n    _this.managePasswordVisibility = _this.managePasswordVisibility.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SignupScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Platform.OS == 'ios') {\n        KeyboardManager.setEnable(false);\n        KeyboardManager.setEnableAutoToolbar(false);\n      }\n    }\n  }, {\n    key: \"renderField\",\n    value: function renderField(_ref) {\n      var label = _ref.label,\n          onEnter = _ref.onEnter,\n          maxLength = _ref.maxLength,\n          keyboardType = _ref.keyboardType,\n          _ref$meta = _ref.meta,\n          touched = _ref$meta.touched,\n          error = _ref$meta.error,\n          warning = _ref$meta.warning,\n          _ref$input = _ref.input,\n          onChange = _ref$input.onChange,\n          restInput = _objectWithoutProperties(_ref$input, [\"onChange\"]),\n          secureTextEntry = _ref.secureTextEntry,\n          autoCapitalize = _ref.autoCapitalize,\n          multiline = _ref.multiline,\n          numberOfLines = _ref.numberOfLines;\n\n      var hasError = false;\n\n      if (error !== undefined) {\n        hasError = true;\n      }\n\n      return React.createElement(View, {\n        style: {\n          flexDirection: 'column',\n          height: 70,\n          alignItems: 'flex-start'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, React.createElement(Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, React.createElement(Input, _extends({\n        style: {\n          color: colors.white\n        },\n        onSubmitEditing: onEnter,\n        autoCapitalize: autoCapitalize ? autoCapitalize : 'sentences',\n        placeholderTextColor: colors.white,\n        secureTextEntry: secureTextEntry ? secureTextEntry : false,\n        keyboardType: keyboardType,\n        placeholder: label,\n        onChangeText: onChange,\n        maxLength: maxLength ? maxLength : null,\n        multiline: multiline ? multiline : false,\n        numberOfLines: numberOfLines ? numberOfLines : 1\n      }, restInput, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      })), touched && (error && React.createElement(Icon, {\n        name: 'ios-alert',\n        style: {\n          color: 'red',\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 40\n        }\n      }) || warning && React.createElement(Text, {\n        style: [fixStyles.fontContainer, {\n          color: 'orange'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }\n      }, warning))));\n    }\n  }, {\n    key: \"_handleSubmitWrapper\",\n    value: function _handleSubmitWrapper() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          navigation = _this$props.navigation;\n      handleSubmit(function (data) {\n        _this2.setState({\n          isWorking: true\n        });\n\n        serviceSignup(data).then(function (data) {\n          console.log(data);\n\n          if (!data.error) {\n            _this2.props.actionLoginUser(data.data);\n\n            _this2.props.navigator.resetTo({\n              screen: 'survey.Home',\n              navigatorStyle: {\n                navBarHidden: true\n              }\n            });\n          } else {\n            Alert.alert('Oops', data.message, [{\n              text: 'OK',\n              onPress: function onPress() {}\n            }], {\n              cancelable: false\n            });\n          }\n\n          _this2.setState({\n            isWorking: false\n          });\n        });\n      })();\n    }\n  }, {\n    key: \"_handleLoginClick\",\n    value: function _handleLoginClick() {\n      this.props.navigator.push({\n        screen: 'survey.Login',\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"_renderSignUpButtonContent\",\n    value: function _renderSignUpButtonContent() {\n      if (!this.state.isWorking) {\n        return React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.authButtonText],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }\n        }, this.state.bottomButtonText);\n      } else {\n        return React.createElement(ActivityIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_handleNextButton\",\n    value: function _handleNextButton() {\n      this.props.navigator.resetTo({\n        screen: 'survey.Home',\n        animated: true,\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"_handleResultButton\",\n    value: function _handleResultButton() {\n      this.props.navigator.resetTo({\n        screen: 'survey.Result',\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../resources/ic_background.jpg\"),\n        style: {\n          width: getWidthByPerc(100),\n          height: getHeightByPerc(100)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }\n      }, React.createElement(KeyboardAwareScrollView, {\n        keyboardShoulePersistTaps: \"always\",\n        enableOnAndroid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.questionContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.questionCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        source: require(\"../resources/ic_logo.jpg\"),\n        style: {\n          width: 100,\n          height: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.questionText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }\n      }, \"SIMPLE BUDGETZ APP\"), React.createElement(View, {\n        style: {\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 29\n        }\n      }, React.createElement(Field, {\n        blurOnSubmit: false,\n        name: \"name\",\n        keyboardType: \"default\",\n        label: \"Full Name\",\n        component: this.renderField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 33\n        }\n      }), React.createElement(Field, {\n        autoCapitalize: \"none\",\n        name: \"email\",\n        keyboardType: \"email-address\",\n        label: \"Email Address\",\n        component: this.renderField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 33\n        }\n      }), React.createElement(View, {\n        style: {\n          position: 'relative',\n          alignSelf: 'stretch',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 33\n        }\n      }, React.createElement(Field, {\n        blurOnSubmit: false,\n        secureTextEntry: this.state.hidePassword,\n        name: \"password\",\n        keyboardType: \"default\",\n        label: \"Password\",\n        component: this.renderField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 37\n        }\n      }), React.createElement(TouchableOpacity, {\n        activeOpacity: 0.8,\n        style: {\n          position: 'absolute',\n          right: 3,\n          height: 40,\n          width: 35,\n          padding: 5\n        },\n        onPress: this.managePasswordVisibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 37\n        }\n      }, React.createElement(Icon, {\n        style: {\n          color: colors.white,\n          fontSize: 20\n        },\n        name: this.state.hidePassword ? \"md-eye-off\" : \"md-eye\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 41\n        }\n      }))), React.createElement(TouchableOpacity, {\n        style: [styles.nextButton, {\n          marginVertical: 10\n        }],\n        onPress: this._handleSubmitWrapper.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 33\n        }\n      }, this._renderSignUpButtonContent()), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          marginVertical: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, {\n          color: colors.white\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 33\n        }\n      }, \"Already Have An Account?\"), React.createElement(TouchableOpacity, {\n        onPress: this._handleLoginClick.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, {\n          color: colors.white,\n          textDecorationLine: 'underline',\n          marginLeft: 5\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 37\n        }\n      }, \"Log In\"))), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, {\n          color: colors.white\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 37\n        }\n      }, \"I agree to all the\"), React.createElement(TouchableOpacity, {\n        onPress: this._handleLoginClick.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, {\n          color: colors.white,\n          textDecorationLine: 'underline',\n          marginLeft: 5\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 41\n        }\n      }, \"Terms and Conditions\")))))))));\n    }\n  }]);\n\n  return SignupScreen;\n}(React.PureComponent);\n\nSignupScreen.navigatorStyle = {\n  statusBarColor: 'transparent',\n  statusBarTextColorScheme: 'light',\n  navBarHidden: true,\n  drawUnderStatusBar: true\n};\nvar styles = StyleSheet.create({\n  questionContainer: {\n    flex: 1,\n    paddingHorizontal: 20,\n    justifyContent: 'space-around',\n    width: getWidthByPerc(100),\n    height: getHeightByPerc(100)\n  },\n  questionCard: {\n    flex: 4,\n    marginTop: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  questionText: {\n    fontSize: 20,\n    marginTop: 15,\n    color: colors.white\n  },\n  nextButton: {\n    paddingVertical: 10,\n    backgroundColor: colors.white,\n    width: getWidthByPerc(100, 40)\n  },\n  buttonStyle: {\n    textAlign: 'center',\n    fontSize: 18,\n    color: colors.black\n  },\n  numberStyle: {\n    fontSize: 20,\n    color: colors.white\n  },\n  greatText: {\n    fontSize: 50,\n    color: colors.white,\n    fontWeight: 'bold'\n  },\n  mainContainer: {\n    backgroundColor: colors.white,\n    paddingHorizontal: 5\n  },\n  container: {\n    flex: 1,\n    backgroundColor: colors.white,\n    paddingBottom: 20\n  },\n  authButton: {\n    backgroundColor: colors.headerColor\n  },\n  authButtonText: {\n    color: colors.gray,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  paddingBottom: {\n    marginTop: 5,\n    justifyContent: 'center'\n  }\n});\nvar ReduxForm = reduxForm({\n  form: 'signup_form',\n  validate: validate\n})(SignupScreen);\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    actionLoginUser: actionLoginUser\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(ReduxForm);","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/Singup.screen.js"],"names":["React","PropTypes","connect","bindActionCreators","KeyboardAwareScrollView","Item","Input","Button","Textarea","Icon","Field","reduxForm","fixStyles","colors","getHeightByPerc","getWidthByPerc","serviceSignup","actionLoginUser","KeyboardManager","validate","values","console","log","errors","name","email","test","password","SignupScreen","props","managePasswordVisibility","setState","hidePassword","state","bottomButtonText","isWorking","_handleNextButton","bind","_handleSubmitWrapper","_handleLoginClick","Platform","OS","setEnable","setEnableAutoToolbar","label","onEnter","maxLength","keyboardType","meta","touched","error","warning","input","onChange","restInput","secureTextEntry","autoCapitalize","multiline","numberOfLines","hasError","undefined","flexDirection","height","alignItems","color","white","fontSize","fontContainer","handleSubmit","navigation","data","then","navigator","resetTo","screen","navigatorStyle","navBarHidden","Alert","alert","message","text","onPress","cancelable","push","styles","authButtonText","animated","flex","require","width","questionContainer","questionCard","questionText","marginTop","renderField","position","alignSelf","justifyContent","right","padding","nextButton","marginVertical","_renderSignUpButtonContent","textDecorationLine","marginLeft","PureComponent","statusBarColor","statusBarTextColorScheme","drawUnderStatusBar","StyleSheet","create","paddingHorizontal","paddingVertical","backgroundColor","buttonStyle","textAlign","black","numberStyle","greatText","fontWeight","mainContainer","container","paddingBottom","authButton","headerColor","gray","ReduxForm","form","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 02/11/18.\n */\nimport React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Platform, ImageBackground, Image, ActivityIndicator, Alert } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { connect,  } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Item, Input, Button, Textarea } from 'native-base';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { Field, reduxForm } from 'redux-form';\nimport fixStyles, { colors } from '../styles/index.style';\nimport { getHeightByPerc, getWidthByPerc } from '../styles/StyleUtils.style';\nimport { serviceSignup } from '../services/Auth.service';\nimport { actionLoginUser } from '../actions/Auth.action';\nimport KeyboardManager from 'react-native-keyboard-manager';\n\n\n\nconst validate = values => {\n    console.log('Singup up values', values);\n    const errors = {};\n    if (!values.name) {\n        errors.name = 'Required'\n    }\n    if (!values.email) {\n        errors.email = 'Required'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email'\n    }\n    if (!values.password) {\n        errors.password = 'Required'\n    }\n    return errors;\n};\n\n\nclass SignupScreen extends React.PureComponent {\n    static navigatorStyle = {\n        statusBarColor: 'transparent',\n        statusBarTextColorScheme: 'light',\n        navBarHidden: true,\n        drawUnderStatusBar: true\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            bottomButtonText: 'SIGN UP',\n            isWorking: false,\n            hidePassword: true\n        };\n        this._handleNextButton = this._handleNextButton.bind(this);\n        this._handleSubmitWrapper = this._handleSubmitWrapper.bind(this);\n        this._handleLoginClick = this._handleLoginClick.bind(this);\n        this.managePasswordVisibility = this.managePasswordVisibility.bind(this);\n    }\n\n    componentDidMount() {\n        if(Platform.OS == 'ios') {\n            KeyboardManager.setEnable(false);\n            KeyboardManager.setEnableAutoToolbar(false);\n        }\n\n        // this.props.checkToken(JSON.stringify({token: 12, user_id: 21}));\n        // this.props.navigator.push({\n        //     screen: 'survey.Result',\n        //     navigatorStyle: {\n        //         navBarHidden: true\n        //     }\n        // });\n    }\n\n    renderField({label, onEnter, maxLength, keyboardType, meta: {touched, error, warning}, input: {onChange, ...restInput}, secureTextEntry, autoCapitalize, multiline, numberOfLines }) {\n        let hasError = false;\n        if (error !== undefined) {\n            hasError = true;\n        }\n        return (<View style={{flexDirection: 'column', height: 70, alignItems: 'flex-start'}}>\n\n            <Item>\n                <Input\n                    style={{ color: colors.white }}\n                    onSubmitEditing={onEnter}\n                    autoCapitalize={autoCapitalize ? autoCapitalize : 'sentences'}\n                    placeholderTextColor={colors.white}\n                    secureTextEntry={secureTextEntry ? secureTextEntry : false}\n                    keyboardType={keyboardType}\n                    placeholder={label}\n                    onChangeText={onChange}\n                    maxLength={maxLength ? maxLength : null}\n                    multiline={ multiline ? multiline : false }\n                    numberOfLines={ numberOfLines ? numberOfLines : 1 }\n                    {...restInput}\n                />\n                {touched && ((error && <Icon name={'ios-alert'} style={{ color: 'red', fontSize: 18 }} />) ||\n                (warning && <Text style={[ fixStyles.fontContainer, {color: 'orange'}]}>{warning}</Text>))}\n            </Item>\n        </View>);\n    }\n    _handleSubmitWrapper() {\n        const { handleSubmit, navigation } = this.props;\n        // navigation.navigate('SIGNUP_SECOND');\n        handleSubmit((data) => {\n            this.setState({ isWorking: true });\n            serviceSignup(data).then((data) => {\n                console.log(data)\n                if (!data.error) {\n                    this.props.actionLoginUser(data.data);\n                    this.props.navigator.resetTo({\n                        screen: 'survey.Home',\n                        navigatorStyle: {\n                            navBarHidden: true\n                        }\n                    });\n                } else {\n                    Alert.alert('Oops', data.message, [\n                            {\n                                text: 'OK', onPress: () => {\n                            }\n                            },\n                        ],\n                        {cancelable: false});\n                }\n                this.setState({ isWorking: false });\n            });\n        })();\n\n    }\n    _handleLoginClick() {\n        this.props.navigator.push({\n            screen: 'survey.Login',\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n    _renderSignUpButtonContent() {\n        if(!this.state.isWorking) {\n            return (<Text style={[ fixStyles.fontContainer, styles.authButtonText]}>{this.state.bottomButtonText}</Text>)\n        } else {\n            return (<ActivityIndicator />)\n        }\n    }\n    _handleNextButton() {\n        this.props.navigator.resetTo({\n            screen: 'survey.Home',\n            animated: true,\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n\n    _handleResultButton() {\n        this.props.navigator.resetTo({\n            screen: 'survey.Result',\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n\n    managePasswordVisibility = () =>\n    {\n        this.setState({ hidePassword: !this.state.hidePassword });\n    }\n    render() {\n        return (\n            <View style={{ flex: 1}}>\n                <ImageBackground\n                    source={require('../resources/ic_background.jpg')}\n                    style={{ width: getWidthByPerc(100), height: getHeightByPerc(100) }}\n                >\n                    <KeyboardAwareScrollView keyboardShoulePersistTaps=\"always\" enableOnAndroid>\n                    <View style={styles.questionContainer}>\n                        <View style={styles.questionCard}>\n                            <Image source={require('../resources/ic_logo.jpg')} style={{ width: 100, height: 100 }} />\n                            <Text style={[ fixStyles.fontContainer, styles.questionText ]}>SIMPLE BUDGETZ APP</Text>\n                            <View style={{ marginTop: 10 }}>\n                                <Field blurOnSubmit={false}  name=\"name\" keyboardType=\"default\" label=\"Full Name\" component={this.renderField} />\n                                <Field\n                                    autoCapitalize=\"none\"\n                                    name=\"email\"\n                                    keyboardType=\"email-address\"\n                                    label=\"Email Address\"\n                                    component={this.renderField}\n                                />\n                                <View style={{ position: 'relative', alignSelf: 'stretch', justifyContent: 'center'}}>\n                                    <Field\n                                        blurOnSubmit={false}\n                                        secureTextEntry={this.state.hidePassword}\n                                        name=\"password\"\n                                        keyboardType=\"default\"\n                                        label=\"Password\"\n                                        component={this.renderField}\n                                    />\n                                    <TouchableOpacity\n                                        activeOpacity={0.8}\n                                        style={{ position: 'absolute', right: 3, height: 40, width: 35, padding: 5 }}\n                                        onPress={this.managePasswordVisibility}\n                                    >\n                                        <Icon style={{color: colors.white, fontSize: 20 }} name={( this.state.hidePassword ) ? \"md-eye-off\" : \"md-eye\"}  />\n                                    </TouchableOpacity>\n                                </View>\n                                <TouchableOpacity style={[styles.nextButton, { marginVertical: 10, }]} onPress={this._handleSubmitWrapper.bind(this)}>\n                                    {this._renderSignUpButtonContent()}\n                                </TouchableOpacity>\n                                <View style={{flexDirection: 'row', justifyContent: 'center', marginVertical: 5}}>\n                                <Text style={[fixStyles.fontContainer, { color: colors.white }]}>Already Have An Account?</Text>\n                                    <TouchableOpacity onPress={this._handleLoginClick.bind(this)}>\n                                    <Text  style={[fixStyles.fontContainer, { color: colors.white, textDecorationLine: 'underline', marginLeft: 5 }]}>Log In</Text>\n                                </TouchableOpacity>\n                                </View>\n                                <View style={{flexDirection: 'row', justifyContent: 'center'}}>\n                                    <Text style={[fixStyles.fontContainer, { color: colors.white }]}>I agree to all the</Text>\n                                    <TouchableOpacity onPress={this._handleLoginClick.bind(this)}>\n                                        <Text  style={[fixStyles.fontContainer, { color: colors.white, textDecorationLine: 'underline', marginLeft: 5 }]}>Terms and Conditions</Text>\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n                        </View>\n                    </View>\n                    </KeyboardAwareScrollView>\n\n                </ImageBackground>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    questionContainer: {\n        flex: 1,\n        paddingHorizontal: 20,\n        justifyContent: 'space-around',\n        width: getWidthByPerc(100),\n        height: getHeightByPerc(100)\n    },\n    questionCard: {\n        flex: 4,\n        marginTop: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    questionText: {\n        fontSize: 20,\n        marginTop: 15,\n        color: colors.white\n    },\n    nextButton: {\n        paddingVertical:10,\n        backgroundColor: colors.white,\n        width: getWidthByPerc(100, 40),\n    },\n    buttonStyle: {\n        textAlign: 'center',\n        fontSize: 18,\n        color: colors.black,\n    },\n    numberStyle: {\n        fontSize: 20,\n        color: colors.white\n    },\n    greatText: {\n        fontSize: 50,\n        color: colors.white,\n        fontWeight: 'bold'\n    },\n    mainContainer: {\n        backgroundColor: colors.white,\n        paddingHorizontal: 5\n    },\n    container: {\n        flex: 1,\n        backgroundColor: colors.white,\n        paddingBottom: 20\n    },\n    authButton: {\n        backgroundColor: colors.headerColor\n    },\n    authButtonText: {\n        color: colors.gray,\n        textAlign: 'center',\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    paddingBottom: {\n        marginTop: 5,\n        justifyContent: 'center'\n    }\n});\n\nconst ReduxForm = reduxForm({\n    form: 'signup_form',\n    validate,\n})(SignupScreen);\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({actionLoginUser: actionLoginUser}, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(ReduxForm);"]},"metadata":{},"sourceType":"module"}