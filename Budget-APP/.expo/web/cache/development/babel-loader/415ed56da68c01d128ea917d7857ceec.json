{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/Settings.screen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Item, Input, Button, Textarea } from 'native-base';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport fixStyles, { colors } from \"../styles/index.style\";\nimport { getHeightByPerc, getWidthByPerc } from \"../styles/StyleUtils.style\";\nimport { actionLogoutUser } from \"../actions/Auth.action\";\n\nvar SettingsScreen = function (_React$PureComponent) {\n  _inherits(SettingsScreen, _React$PureComponent);\n\n  var _super = _createSuper(SettingsScreen);\n\n  function SettingsScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SettingsScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isSwitchOn: false,\n      bottomButtonText: 'Log Out',\n      isWorking: false\n    };\n    _this._handleBackButton = _this._handleBackButton.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SettingsScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"_handleSwitchChange\",\n    value: function _handleSwitchChange(status) {}\n  }, {\n    key: \"_renderSignUpButtonContent\",\n    value: function _renderSignUpButtonContent() {\n      if (!this.state.isWorking) {\n        return React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.authButtonText],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, this.state.bottomButtonText);\n      } else {\n        return React.createElement(ActivityIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_handleBackButton\",\n    value: function _handleBackButton() {\n      this.props.navigator.pop({\n        animated: true,\n        animationType: 'slide-horizontal'\n      });\n    }\n  }, {\n    key: \"_handleLogout\",\n    value: function _handleLogout() {\n      this.setState({\n        isWorking: true\n      });\n      this.props.actionLogoutUser();\n      this.props.navigator.resetTo({\n        screen: 'survey.Signup',\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../resources/ic_background.jpg\"),\n        style: {\n          width: getWidthByPerc(100),\n          height: getHeightByPerc(100)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, React.createElement(KeyboardAwareScrollView, {\n        keyboardShoulePersistTaps: true,\n        enableOnAndroid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: [styles.flexRow, {\n          justifyContent: 'flex-start',\n          paddingHorizontal: 10,\n          paddingTop: 40\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this._handleBackButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        source: require(\"../resources/ic_back.png\"),\n        style: {\n          width: 20,\n          height: 15,\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }\n      })), React.createElement(Text, {\n        style: [fixStyles.fontContainer, {\n          fontSize: 12,\n          color: colors.white\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }, \"Settings\")), React.createElement(View, {\n        style: styles.questionContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.questionCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        source: require(\"../resources/ic_logo.jpg\"),\n        style: {\n          width: 100,\n          height: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.questionText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, \"SIMPLE BUDGETZ APP\")), React.createElement(View, {\n        style: {\n          flex: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: styles.rowView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.userText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 37\n        }\n      }, \"Name\"), React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.userText, {\n          fontWeight: 'bold'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }, this.props.user_name)), React.createElement(View, {\n        style: styles.rowView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.userText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }\n      }, \"Email\"), React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.userText, {\n          fontWeight: 'bold'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, this.props.user_email)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.nextButton, {\n          marginVertical: 20\n        }],\n        onPress: this._handleLogout.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 37\n        }\n      }, this._renderSignUpButtonContent())))))));\n    }\n  }]);\n\n  return SettingsScreen;\n}(React.PureComponent);\n\nSettingsScreen.navigatorStyle = {\n  statusBarColor: 'transparent',\n  statusBarTextColorScheme: 'light',\n  navBarHidden: true,\n  drawUnderStatusBar: true\n};\nvar styles = StyleSheet.create({\n  questionContainer: {\n    flex: 1,\n    paddingHorizontal: 20,\n    justifyContent: 'space-around',\n    width: getWidthByPerc(100),\n    height: getHeightByPerc(100)\n  },\n  questionCard: {\n    flex: 2,\n    marginTop: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  questionText: {\n    fontSize: 20,\n    marginTop: 15,\n    color: colors.white\n  },\n  userText: {\n    fontSize: 18,\n    color: colors.white\n  },\n  nextButton: {\n    paddingVertical: 10,\n    backgroundColor: colors.white,\n    width: getWidthByPerc(100, 40)\n  },\n  buttonStyle: {\n    textAlign: 'center',\n    fontSize: 18,\n    color: colors.black\n  },\n  container: {\n    flex: 1,\n    backgroundColor: colors.white,\n    paddingBottom: 20\n  },\n  paddingBottom: {\n    marginTop: 5,\n    justifyContent: 'center'\n  },\n  rowView: {\n    marginVertical: 10,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  authButtonText: {\n    color: colors.gray,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  flexRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    user_name: 'user_name' in state.auth.user_profile ? state.auth.user_profile.user_name : '',\n    user_email: 'user_email' in state.auth.user_profile ? state.auth.user_profile.user_email : ''\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    actionLogoutUser: actionLogoutUser\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsScreen);","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/Settings.screen.js"],"names":["React","PropTypes","connect","bindActionCreators","KeyboardAwareScrollView","Item","Input","Button","Textarea","Icon","fixStyles","colors","getHeightByPerc","getWidthByPerc","actionLogoutUser","SettingsScreen","props","state","isSwitchOn","bottomButtonText","isWorking","_handleBackButton","bind","status","fontContainer","styles","authButtonText","navigator","pop","animated","animationType","setState","resetTo","screen","navigatorStyle","navBarHidden","flex","require","width","height","flexRow","justifyContent","paddingHorizontal","paddingTop","marginRight","fontSize","color","white","questionContainer","questionCard","questionText","rowView","userText","fontWeight","user_name","user_email","nextButton","marginVertical","_handleLogout","_renderSignUpButtonContent","PureComponent","statusBarColor","statusBarTextColorScheme","drawUnderStatusBar","StyleSheet","create","marginTop","alignItems","paddingVertical","backgroundColor","buttonStyle","textAlign","black","container","paddingBottom","flexDirection","gray","mapStateToProps","auth","user_profile","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 12/11/18.\n */\n/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 02/11/18.\n */\n\nimport React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, TextInput, ImageBackground, Image, ActivityIndicator, Switch } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Item, Input, Button, Textarea } from 'native-base';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport fixStyles, { colors } from '../styles/index.style';\nimport { getHeightByPerc, getWidthByPerc } from '../styles/StyleUtils.style';\nimport { actionLogoutUser } from '../actions/Auth.action';\n\nclass SettingsScreen extends React.PureComponent {\n    static navigatorStyle = {\n        statusBarColor: 'transparent',\n        statusBarTextColorScheme: 'light',\n        navBarHidden: true,\n        drawUnderStatusBar: true\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSwitchOn: false,\n            bottomButtonText: 'Log Out',\n            isWorking: false,\n        };\n        this._handleBackButton = this._handleBackButton.bind(this);\n    }\n\n    componentDidMount() {\n    }\n    _handleSwitchChange(status) {\n        // serviceNotificationStatusUpdate({ status: status, device_id: DeviceInfo.getUniqueID() }).then((data) => {\n        //     if (!data.error) {\n        //         this.setState({ isSwitchOn : status });\n        //     }\n        // });\n    }\n    _renderSignUpButtonContent() {\n        if(!this.state.isWorking) {\n            return (<Text style={[ fixStyles.fontContainer, styles.authButtonText]}>{this.state.bottomButtonText}</Text>)\n        } else {\n            return (<ActivityIndicator />)\n        }\n    }\n    _handleBackButton() {\n        this.props.navigator.pop({\n            animated: true,\n            animationType: 'slide-horizontal',\n        });\n    }\n    _handleLogout() {\n        this.setState({ isWorking: true });\n        this.props.actionLogoutUser();\n        this.props.navigator.resetTo({\n            screen: 'survey.Signup',\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n    render() {\n        return (\n            <View style={{ flex: 1}}>\n                <ImageBackground\n                    source={require('../resources/ic_background.jpg')}\n                    style={{ width: getWidthByPerc(100), height: getHeightByPerc(100) }}\n                >\n                    <KeyboardAwareScrollView keyboardShoulePersistTaps enableOnAndroid>\n                        <View style={[styles.flexRow, {justifyContent: 'flex-start', paddingHorizontal: 10, paddingTop: 40}]}>\n                            <TouchableOpacity onPress={this._handleBackButton}>\n                                <Image source={require('../resources/ic_back.png')}\n                                       style={{width: 20, height: 15, marginRight: 10}}/>\n                            </TouchableOpacity>\n                            <Text style={[fixStyles.fontContainer, {fontSize: 12 , color: colors.white}]}>Settings</Text>\n                        </View>\n                        <View style={styles.questionContainer}>\n                            <View style={styles.questionCard}>\n                                <Image source={require('../resources/ic_logo.jpg')} style={{ width: 100, height: 100 }} />\n                                <Text style={[ fixStyles.fontContainer, styles.questionText ]}>SIMPLE BUDGETZ APP</Text>\n                            </View>\n                            <View style={{flex:2}}>\n                                <View style={styles.rowView}>\n                                    <Text style={[fixStyles.fontContainer, styles.userText]}>Name</Text>\n                                    <Text style={[ fixStyles.fontContainer, styles.userText, { fontWeight: 'bold' } ]}>{this.props.user_name}</Text>\n                                </View>\n                                <View style={styles.rowView}>\n                                    <Text style={[fixStyles.fontContainer, styles.userText]}>Email</Text>\n                                    <Text style={[ fixStyles.fontContainer, styles.userText, { fontWeight: 'bold' } ]}>{this.props.user_email}</Text>\n                                </View>\n                                {/*<View style={styles.rowView}>*/}\n                                    {/*<Text style={[fixStyles.fontContainer, styles.userText]}>Notification</Text>*/}\n                                    {/*<Switch*/}\n                                        {/*onValueChange={this._handleSwitchChange.bind(this)}*/}\n                                        {/*value={this.state.isSwitchOn}*/}\n                                    {/*/>*/}\n                                {/*</View>*/}\n                                <View>\n                                    <TouchableOpacity style={[styles.nextButton, { marginVertical: 20, }]} onPress={this._handleLogout.bind(this)}>\n                                        {this._renderSignUpButtonContent()}\n                                    </TouchableOpacity>\n                                </View>\n                            </View>\n                        </View>\n\n                    </KeyboardAwareScrollView>\n\n                </ImageBackground>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    questionContainer: {\n        flex: 1,\n        paddingHorizontal: 20,\n        justifyContent: 'space-around',\n        width: getWidthByPerc(100),\n        height: getHeightByPerc(100)\n    },\n    questionCard: {\n        flex: 2,\n        marginTop: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    questionText: {\n        fontSize: 20,\n        marginTop: 15,\n        color: colors.white\n    },\n    userText: {\n        fontSize: 18,\n        color: colors.white\n    },\n    nextButton: {\n        paddingVertical:10,\n        backgroundColor: colors.white,\n        width: getWidthByPerc(100, 40),\n    },\n    buttonStyle: {\n        textAlign: 'center',\n        fontSize: 18,\n        color: colors.black,\n    },\n    container: {\n        flex: 1,\n        backgroundColor: colors.white,\n        paddingBottom: 20\n    },\n\n    paddingBottom: {\n        marginTop: 5,\n        justifyContent: 'center'\n    },\n    rowView :{\n        marginVertical: 10,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n    },\n    authButtonText: {\n        color: colors.gray,\n        textAlign: 'center',\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n    flexRow: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n\n});\nfunction mapStateToProps(state) {\n    return {\n        user_name: 'user_name' in state.auth.user_profile ? state.auth.user_profile.user_name: '',\n        user_email: 'user_email' in state.auth.user_profile ? state.auth.user_profile.user_email: '',\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        actionLogoutUser: actionLogoutUser,\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsScreen);"]},"metadata":{},"sourceType":"module"}