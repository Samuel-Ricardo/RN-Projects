{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/Result.screen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport fixStyles, { colors } from \"../styles/index.style\";\nimport { getHeightByPerc, getWidthByPerc } from \"../styles/StyleUtils.style\";\nimport { actionGetBudgetFromServer } from \"../actions/Budget.action\";\nimport { actionLogoutUser } from \"../actions/Auth.action\";\n\nvar Result = function (_React$PureComponent) {\n  _inherits(Result, _React$PureComponent);\n\n  var _super = _createSuper(Result);\n\n  function Result(props) {\n    var _this;\n\n    _classCallCheck(this, Result);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      interactionsComplete: false\n    };\n    _this._handleNextButton = _this._handleNextButton.bind(_assertThisInitialized(_this));\n    _this._handleSettingButton = _this._handleSettingButton.bind(_assertThisInitialized(_this));\n    _this._gotoQuestion = _this._gotoQuestion.bind(_assertThisInitialized(_this));\n    _this._handleBackButton = _this._handleBackButton.bind(_assertThisInitialized(_this));\n    _this.tempTitles = {\n      charity: 'Charity',\n      saving: 'Savings',\n      rent: 'Rent/Utilities',\n      gas: 'Gas/Car',\n      food: 'Food Supplies',\n      spendable: 'Spendable',\n      travel: 'Travel'\n    };\n    return _this;\n  }\n\n  _createClass(Result, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      InteractionManager.runAfterInteractions(function () {\n        _this2.setState({\n          interactionsComplete: true\n        });\n      });\n    }\n  }, {\n    key: \"_handleNextButton\",\n    value: function _handleNextButton() {\n      this.props.navigator.resetTo({\n        screen: 'survey.Home',\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"_gotoQuestion\",\n    value: function _gotoQuestion() {\n      this.props.navigator.resetTo({\n        screen: 'survey.Home',\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"_handleSettingButton\",\n    value: function _handleSettingButton() {\n      this.props.navigator.push({\n        screen: 'survey.Setting',\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"_handleBackButton\",\n    value: function _handleBackButton() {\n      this.props.navigator.pop({\n        animated: true,\n        animationType: 'slide-horizontal'\n      });\n    }\n  }, {\n    key: \"_renderCategories\",\n    value: function _renderCategories() {\n      var _this3 = this;\n\n      return this.props.budget_categories.map(function (val, key) {\n        return React.createElement(View, {\n          key: val.title,\n          style: [styles.flexRow, styles.resultList, styles.paddingVertical, _this3.props.budget_categories != key + 1 ? {\n            borderBottomWidth: 2,\n            borderBottomColor: colors.backgroundGray,\n            paddingBottom: 8\n          } : {}],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 22\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.listText, {\n            textAlign: 'center',\n            color: colors.backgroundBlue,\n            minWidth: 40\n          }],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }\n        }, val.percentage, \"%\"), React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.listText, {}],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }\n        }, val.title in _this3.tempTitles ? _this3.tempTitles[val.title] : val.title)), React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.listText],\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }\n        }, \"$ \", val.amount, \" \"));\n      });\n    }\n  }, {\n    key: \"_renderList\",\n    value: function _renderList() {\n      var _this4 = this;\n\n      if (this.props.is_fetching && this.state.interactionsComplete) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 93\n          }\n        }));\n      } else if (this.props.budget_error) {\n        return React.createElement(View, {\n          style: [{\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: [styles.nextButton, {\n            backgroundColor: 'transparent',\n            borderColor: colors.white,\n            borderWidth: 1,\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            _this4.props.actionGetBudgetFromServer();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.buttonStyle, {\n            color: colors.white\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }\n        }, \"RETRY\")));\n      } else if (parseInt(this.props.budget_total) > 0) {\n        return React.createElement(ScrollView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 22\n          }\n        }, React.createElement(View, {\n          style: styles.mainContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: styles.flexRow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.whiteColor, {\n            fontSize: 12\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }\n        }, \"Hey \", this.props.user_name), React.createElement(TouchableOpacity, {\n          onPress: this._handleSettingButton,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }\n        }, React.createElement(Image, {\n          source: require(\"../resources/setting.png\"),\n          style: {\n            width: 20,\n            height: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }\n        }))), React.createElement(View, {\n          style: [styles.flexRow, {\n            marginTop: 30\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.whiteColor, {\n            fontSize: 38,\n            fontWeight: 'bold'\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }\n        }, \"$\", this.props.budget_total)), React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.whiteColor, {\n            fontSize: 14\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }\n        }, \"In total\")))), React.createElement(View, {\n          style: {\n            marginTop: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, {\n            textAlign: 'right',\n            fontSize: 10,\n            color: colors.white\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }\n        }, \"Calculated Automatically\"), React.createElement(View, {\n          style: [styles.borderStyle, {\n            backgroundColor: colors.white,\n            paddingVertical: 15,\n            paddingHorizontal: 10\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1,\n            alignItems: 'flex-end',\n            paddingBottom: 5,\n            paddingRight: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            _this4.props.navigator.push({\n              screen: 'survey.Edit',\n              navigatorStyle: {\n                navBarHidden: true\n              }\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, {\n            color: colors.backgroundBlue,\n            fontWeight: 'bold'\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 33\n          }\n        }, \"Edit\"))), this._renderCategories())), React.createElement(View, {\n          style: [styles.borderStyle, {\n            paddingHorizontal: 10,\n            paddingVertical: 5,\n            marginTop: 10,\n            backgroundColor: colors.white\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, {\n            color: colors.backgroundBlue,\n            fontSize: 16,\n            marginBottom: 5,\n            fontWeight: 'bold'\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }\n        }, \"TIP\"), React.createElement(View, {\n          style: {\n            borderStyle: 'dashed',\n            borderTopWidth: 2,\n            borderColor: colors.backgroundGray,\n            paddingVertical: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, {\n            color: colors.black,\n            fontSize: 12,\n            fontWeight: 'bold'\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }\n        }, \"Try to save as much as possible! \", \"\\n\", \"10% is healthy but try to get it way higher!\"))), React.createElement(View, {\n          style: {\n            marginTop: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: [styles.borderStyle, styles.nextButton, {\n            backgroundColor: colors.white,\n            marginTop: 10\n          }],\n          onPress: function onPress() {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.buttonStyle, {\n            color: colors.black\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }\n        }, \"LIKED THE RESULTS? GET OVER E-MAIL\")), React.createElement(Text, {\n          style: [fixStyles.fontContainer, {\n            textAlign: 'center',\n            fontWeight: 'bold',\n            color: colors.black,\n            marginVertical: 10\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }\n        }, \"OR\"), React.createElement(TouchableOpacity, {\n          style: [styles.borderStyle, styles.nextButton, {\n            backgroundColor: colors.backgroundBlue\n          }],\n          onPress: this._handleNextButton,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.buttonStyle, {\n            fontWeight: 'bold',\n            color: colors.white\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }\n        }, \"RETAKE THE TEST\")), React.createElement(View, {\n          style: {\n            height: 20\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }\n        }))));\n      } else {\n        this._gotoQuestion();\n\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          position: 'absolute',\n          zIndex: -1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          width: getWidthByPerc(100),\n          height: getHeightByPerc(45),\n          backgroundColor: colors.backgroundBlue\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          width: getWidthByPerc(100),\n          height: getHeightByPerc(55),\n          backgroundColor: colors.backgroundGray\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }\n      })), this._renderList());\n    }\n  }]);\n\n  return Result;\n}(React.PureComponent);\n\nResult.navigatorStyle = {\n  statusBarColor: 'transparent',\n  statusBarTextColorScheme: 'light',\n  navBarHidden: true,\n  drawUnderStatusBar: true\n};\nvar styles = StyleSheet.create({\n  borderStyle: {\n    borderRadius: 6,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      height: 1\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 2\n  },\n  mainContainer: {\n    paddingHorizontal: 20,\n    paddingTop: 40,\n    width: getWidthByPerc(100)\n  },\n  whiteColor: {\n    color: colors.white\n  },\n  flexRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  listText: {\n    color: colors.black,\n    fontWeight: 'bold'\n  },\n  paddingVertical: {\n    paddingVertical: 5\n  },\n  nextButton: {\n    paddingVertical: 12,\n    backgroundColor: colors.white,\n    width: getWidthByPerc(100, 40)\n  },\n  buttonStyle: {\n    textAlign: 'center',\n    fontSize: 14,\n    color: colors.black\n  },\n  resultList: {\n    marginBottom: 2\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    budget_error: state.budget.budget_error,\n    is_fetching: state.budget.is_fetching,\n    budget_total: state.budget.total_amount,\n    budget_categories: state.budget.categories,\n    user_name: 'user_name' in state.auth.user_profile ? state.auth.user_profile.user_name : ''\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    actionGetBudgetFromServer: actionGetBudgetFromServer,\n    actionLogoutUser: actionLogoutUser\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/Result.screen.js"],"names":["React","PropTypes","connect","bindActionCreators","fixStyles","colors","getHeightByPerc","getWidthByPerc","actionGetBudgetFromServer","actionLogoutUser","Result","props","state","interactionsComplete","_handleNextButton","bind","_handleSettingButton","_gotoQuestion","_handleBackButton","tempTitles","charity","saving","rent","gas","food","spendable","travel","InteractionManager","runAfterInteractions","setState","navigator","resetTo","screen","navigatorStyle","navBarHidden","push","pop","animated","animationType","budget_categories","map","val","key","title","styles","flexRow","resultList","paddingVertical","length","borderBottomWidth","borderBottomColor","backgroundGray","paddingBottom","flexDirection","fontContainer","listText","textAlign","color","backgroundBlue","minWidth","percentage","amount","is_fetching","flex","justifyContent","alignItems","budget_error","nextButton","backgroundColor","borderColor","white","borderWidth","marginTop","buttonStyle","parseInt","budget_total","mainContainer","whiteColor","fontSize","user_name","require","width","height","fontWeight","borderStyle","paddingHorizontal","paddingRight","_renderCategories","marginBottom","borderTopWidth","black","marginVertical","position","zIndex","_renderList","PureComponent","statusBarColor","statusBarTextColorScheme","drawUnderStatusBar","StyleSheet","create","borderRadius","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","paddingTop","mapStateToProps","budget","total_amount","categories","auth","user_profile","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 27/09/18.\n */\nimport React from 'react';\nimport { View, ScrollView, Text, TouchableOpacity, StyleSheet, TextInput, ImageBackground, Image, InteractionManager, ActivityIndicator } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport fixStyles, { colors } from '../styles/index.style';\nimport { getHeightByPerc, getWidthByPerc } from '../styles/StyleUtils.style';\nimport { actionGetBudgetFromServer } from '../actions/Budget.action';\nimport { actionLogoutUser } from '../actions/Auth.action';\n\n\nclass Result extends React.PureComponent {\n    static navigatorStyle = {\n        statusBarColor: 'transparent',\n        statusBarTextColorScheme: 'light',\n        navBarHidden: true,\n        drawUnderStatusBar: true\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            interactionsComplete: false,\n        };\n        this._handleNextButton = this._handleNextButton.bind(this);\n        this._handleSettingButton = this._handleSettingButton.bind(this);\n        this._gotoQuestion = this._gotoQuestion.bind(this);\n        this._handleBackButton = this._handleBackButton.bind(this);\n        this.tempTitles = {\n            charity: 'Charity',\n            saving: 'Savings',\n            rent: 'Rent/Utilities',\n            gas: 'Gas/Car',\n            food: 'Food Supplies',\n            spendable: 'Spendable',\n            travel: 'Travel',\n        }\n    }\n\n    componentDidMount() {\n        InteractionManager.runAfterInteractions(() => {\n            this.setState({ interactionsComplete: true });\n        });\n    }\n\n    _handleNextButton() {\n        this.props.navigator.resetTo({\n            screen: 'survey.Home',\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n    _gotoQuestion() {\n        this.props.navigator.resetTo({\n            screen: 'survey.Home',\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n    _handleSettingButton() {\n        this.props.navigator.push({\n            screen: 'survey.Setting',\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n    _handleBackButton() {\n        this.props.navigator.pop({\n            animated: true,\n            animationType: 'slide-horizontal',\n        });\n    }\n    _renderCategories() {\n        return this.props.budget_categories.map((val, key) => {\n            return(  <View key={val.title} style={ [styles.flexRow, styles.resultList, styles.paddingVertical, this.props.budget_categories != key +1 ? { borderBottomWidth: 2, borderBottomColor: colors.backgroundGray, paddingBottom: 8} : {}] }>\n                <View style={{flexDirection: 'row'}}>\n                <Text style={[fixStyles.fontContainer, styles.listText, { textAlign: 'center', color: colors.backgroundBlue, minWidth: 40 }]}>{val.percentage}%</Text>\n                <Text style={[fixStyles.fontContainer, styles.listText, { }]}>{val.title in this.tempTitles ? this.tempTitles[val.title] : val.title}</Text>\n                </View>\n                <Text style={[fixStyles.fontContainer, styles.listText]}>$ {val.amount} </Text>\n            </View>);\n        })\n    }\n    _renderList() {\n        if(this.props.is_fetching && this.state.interactionsComplete) {\n            return (<View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}><ActivityIndicator size=\"large\"/></View>)\n        } else if(this.props.budget_error) {\n            return (<View style={[ {flex: 1, justifyContent: 'center', alignItems: 'center'}]}>\n                <TouchableOpacity style={[\n                    styles.nextButton,\n                    {  backgroundColor: 'transparent',\n                        borderColor: colors.white,\n                        borderWidth: 1,\n                        marginTop: 10\n                    }]} onPress={() => { this.props.actionGetBudgetFromServer();}}\n                >\n                    <Text style={[fixStyles.fontContainer, styles.buttonStyle, { color: colors.white }]}>\n                        RETRY\n                    </Text>\n                </TouchableOpacity>\n            </View>)\n        } else if(parseInt(this.props.budget_total) > 0) {\n            return ( <ScrollView>\n                <View style={styles.mainContainer}>\n                    <View style={styles.flexRow}>\n                        <Text style={[fixStyles.fontContainer, styles.whiteColor, { fontSize: 12 }]}>Hey {this.props.user_name}</Text>\n                        <TouchableOpacity onPress={this._handleSettingButton}>\n                            <Image source={require('../resources/setting.png')} style={{ width: 20, height: 20 }} />\n                        </TouchableOpacity>\n                    </View>\n\n                    <View style={[styles.flexRow, { marginTop: 30 }]}>\n                        <View style={{flex: 1, alignItems: 'center'}}>\n                            <View style={{flex: 1 }}>\n                                <Text style={[fixStyles.fontContainer, styles.whiteColor, { fontSize: 38, fontWeight: 'bold' }]}>\n                                    ${this.props.budget_total}\n                                </Text>\n                            </View>\n                            <View style={{flex: 1 }}>\n                                <Text style={[fixStyles.fontContainer, styles.whiteColor, { fontSize: 14 }]}>\n                                    In total\n                                </Text>\n                            </View>\n                            {/*<View style={[fixStyles.textUnderLine, { marginTop: 5 }]}/>*/}\n                        </View>\n\n                    </View>\n                    <View style={{ marginTop: 10 }}>\n                        <Text style={[fixStyles.fontContainer, { textAlign: 'right', fontSize: 10, color: colors.white }]}>Calculated Automatically</Text>\n                        <View style={[styles.borderStyle,{ backgroundColor: colors.white, paddingVertical: 15, paddingHorizontal: 10 }]}>\n                            <View style={{flex: 1, alignItems: 'flex-end', paddingBottom: 5, paddingRight: 5}}>\n                            <TouchableOpacity onPress={() => {\n                                this.props.navigator.push({\n                                    screen: 'survey.Edit',\n                                    navigatorStyle: {\n                                        navBarHidden: true\n                                    }\n                                });\n                            }}>\n                                <Text style={[ fixStyles.fontContainer, { color: colors.backgroundBlue, fontWeight: 'bold',  } ]}>Edit</Text>\n                            </TouchableOpacity>\n                            </View>\n                            {this._renderCategories()}\n                        </View>\n                    </View>\n\n                    <View style={[ styles.borderStyle, { paddingHorizontal: 10, paddingVertical: 5, marginTop: 10, backgroundColor: colors.white }]}>\n                        <Text style={[fixStyles.fontContainer, { color: colors.backgroundBlue, fontSize: 16, marginBottom: 5, fontWeight: 'bold'} ]}>TIP</Text>\n                        <View style={{\n                            borderStyle: 'dashed',\n                            borderTopWidth: 2,\n                            borderColor: colors.backgroundGray,\n                            paddingVertical: 5,\n\n                        }}>\n                            <Text style={[fixStyles.fontContainer, { color: colors.black, fontSize: 12, fontWeight: 'bold' }]}>\n                                Try to save as much as possible! {\"\\n\"}\n                                10% is healthy but try to get it way higher!\n                            </Text>\n                        </View>\n                    </View>\n                    <View style={{ marginTop: 10 }}>\n                        <TouchableOpacity style={[\n                            styles.borderStyle,\n                            styles.nextButton,\n                            {  backgroundColor: colors.white,\n                                marginTop: 10,\n                            }]} onPress={() => {\n                            // this._handleNextButton()\n                        }}>\n                            <Text style={[fixStyles.fontContainer, styles.buttonStyle, { color: colors.black }]}>\n                                LIKED THE RESULTS? GET OVER E-MAIL\n                            </Text>\n                        </TouchableOpacity>\n                        <Text style={[fixStyles.fontContainer, { textAlign: 'center', fontWeight: 'bold', color: colors.black, marginVertical: 10 }]}>\n                            OR\n                        </Text>\n                        <TouchableOpacity style={[ styles.borderStyle, styles.nextButton, { backgroundColor: colors.backgroundBlue }]} onPress={this._handleNextButton}>\n                            <Text style={[fixStyles.fontContainer, styles.buttonStyle, { fontWeight: 'bold', color: colors.white}  ]}>RETAKE THE TEST</Text>\n                        </TouchableOpacity>\n                        <View style={{ height: 20}}/>\n                    </View>\n                </View>\n            </ScrollView>);\n        } else {\n            this._gotoQuestion();\n            return null;\n        }\n    }\n    render() {\n        return (\n            <View style={{ flex: 1}}>\n                <View style={{ flex: 1, position: 'absolute', zIndex: -1 }}>\n                    <View style={{width: getWidthByPerc(100), height: getHeightByPerc(45), backgroundColor: colors.backgroundBlue}}/>\n                    <View style={{width: getWidthByPerc(100), height: getHeightByPerc(55), backgroundColor: colors.backgroundGray}}/></View>\n                {this._renderList()}\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    borderStyle: {\n        // borderWidth: 1,\n        // borderColor: colors.black,\n        borderRadius: 6,\n        elevation: 3,\n        shadowColor: '#000',\n        shadowOffset: {  height: 1 },\n        shadowOpacity: 0.5,\n        shadowRadius: 2,\n        // overflow: 'hidden',\n        // marginHorizontal: 5\n    },\n    mainContainer: {\n        // flex: 1,\n        paddingHorizontal: 20,\n        paddingTop: 40,\n        width: getWidthByPerc(100),\n        // height: getHeightByPerc(100),\n    },\n    whiteColor: {\n        color: colors.white,\n    },\n    flexRow: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    listText: {\n        color: colors.black,\n        fontWeight: 'bold'\n    },\n    paddingVertical: {\n        paddingVertical: 5\n    },\n    nextButton: {\n        paddingVertical:12,\n        backgroundColor: colors.white,\n        width: getWidthByPerc(100, 40),\n    },\n    buttonStyle: {\n        textAlign: 'center',\n        fontSize: 14,\n        color: colors.black,\n    },\n    resultList: {\n        marginBottom: 2,\n    }\n\n});\nfunction mapStateToProps(state) {\n    return {\n        budget_error: state.budget.budget_error,\n        is_fetching: state.budget.is_fetching,\n        budget_total: state.budget.total_amount,\n        budget_categories: state.budget.categories,\n        user_name: 'user_name' in state.auth.user_profile ? state.auth.user_profile.user_name: ''\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        actionGetBudgetFromServer: actionGetBudgetFromServer,\n        actionLogoutUser: actionLogoutUser,\n    }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);"]},"metadata":{},"sourceType":"module"}