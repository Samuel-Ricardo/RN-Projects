{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/QuestionList.screen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport _ from 'lodash';\nimport Snackbar from 'react-native-snackbar';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport fixStyles, { colors } from \"../styles/index.style\";\nimport { getWidthByPerc, getHeightByPerc } from \"../styles/StyleUtils.style\";\nimport QuestionItem from \"../components/Questions/Item.component\";\nimport Data from \"../config/data.json\";\nimport { serviceGetQuestions, serviceUpdateBudget } from \"../services/Home.service\";\nimport { actionSetBudgetCategories, actionSetTotalAmount } from \"../actions/Budget.action\";\nimport KeyboardManager from 'react-native-keyboard-manager';\nvar itemVisibleHotfix = {\n  minimumViewTime: 3000,\n  viewAreaCoveragePercentThreshold: 100,\n  waitForInteraction: true,\n  itemVisiblePercentThresold: 100\n};\n\nvar QuestionList = function (_Component) {\n  _inherits(QuestionList, _Component);\n\n  var _super = _createSuper(QuestionList);\n\n  function QuestionList(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionList);\n\n    _this = _super.call(this, props);\n\n    _this._onSwipeChange = function (_ref) {\n      var viewableItems = _ref.viewableItems;\n      console.log(viewableItems);\n      if (!viewableItems[0] || _this.state.currentPage === viewableItems[0].index) return;\n\n      _this.setState(function (state) {\n        return {\n          previousPage: state.currentPage,\n          currentPage: viewableItems[0].index\n        };\n      });\n    };\n\n    _this.flatList = null;\n    _this.focusArea = [];\n    _this.state = {\n      width: null,\n      height: null,\n      data: [],\n      ids_arr: [],\n      currentPage: 0,\n      current_ques_no: 1,\n      category_data: [],\n      total_amount: null,\n      interactionsComplete: false,\n      is_fetching: true,\n      is_error: false\n    };\n    _this._onLayout = _this._onLayout.bind(_assertThisInitialized(_this));\n    _this._renderItem = _this._renderItem.bind(_assertThisInitialized(_this));\n    _this._keyExtractor = _this._keyExtractor.bind(_assertThisInitialized(_this));\n    _this._onSwipeChange = _this._onSwipeChange.bind(_assertThisInitialized(_this));\n    _this._handleNextPress = _this._handleNextPress.bind(_assertThisInitialized(_this));\n    _this._callNotification = _this._callNotification.bind(_assertThisInitialized(_this));\n    _this._callNotificationMethod = _.debounce(_this._callNotification, 500);\n    _this._getQuestions = _this._getQuestions.bind(_assertThisInitialized(_this));\n    _this.temp_taxes = {\n      'charity': 10,\n      'saving': 10,\n      'rent': 35,\n      'gas': 15,\n      food: 10,\n      travel: 10,\n      spendable: 10\n    };\n    return _this;\n  }\n\n  _createClass(QuestionList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (Platform.OS == 'ios') {\n        KeyboardManager.setEnable(false);\n        KeyboardManager.setEnableAutoToolbar(false);\n      }\n\n      InteractionManager.runAfterInteractions(function () {\n        _this2.setState({\n          interactionsComplete: true\n        });\n      });\n      var tempCategories = [{\n        amount: \"53\",\n        id: 1541075715403,\n        is_locked: false,\n        percentage: 10,\n        title: \"charity\"\n      }, {\n        amount: \"53\",\n        id: 1541075715403,\n        is_locked: false,\n        percentage: 10,\n        title: \"saving\"\n      }, {\n        amount: \"185.5\",\n        id: 1541075715403,\n        is_locked: false,\n        percentage: 35,\n        title: \"rent\"\n      }, {\n        amount: \"79.5\",\n        id: 1541075715403,\n        is_locked: false,\n        percentage: 15,\n        title: \"gas\"\n      }, {\n        amount: \"53\",\n        id: 1541075715403,\n        is_locked: false,\n        percentage: 10,\n        title: \"food\"\n      }, {\n        amount: \"53\",\n        id: 1541075715403,\n        is_locked: false,\n        percentage: 10,\n        title: \"travel\"\n      }, {\n        amount: \"53\",\n        id: 1541075715403,\n        is_locked: true,\n        percentage: 10,\n        title: \"spendable\"\n      }];\n\n      this._getQuestions();\n    }\n  }, {\n    key: \"_getQuestions\",\n    value: function _getQuestions() {\n      var _this3 = this;\n\n      this.setState({\n        is_fetching: true,\n        is_error: false\n      });\n      serviceGetQuestions({}).then(function (data) {\n        console.log('data', data);\n\n        if (!data.error) {\n          var tempData = data.data;\n          var temp = [];\n          var tempIds = [];\n          Object.keys(tempData).forEach(function (val) {\n            tempIds.push(parseInt(val));\n            temp.push(tempData[val]);\n          });\n\n          _this3.setState({\n            data: temp,\n            ids_arr: tempIds,\n            is_fetching: false,\n            is_error: false\n          });\n        } else {\n          _this3.setState({\n            is_fetching: false,\n            is_error: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_callNotification\",\n    value: function _callNotification() {\n      this.props.navigator.showInAppNotification({\n        screen: 'survey.Notification',\n        passProps: {\n          text: 'Please enter amount less than total amount'\n        },\n        autoDismissTimerSec: 1\n      });\n    }\n  }, {\n    key: \"_handleRadioPress\",\n    value: function _handleRadioPress(data) {\n      console.log(data);\n    }\n  }, {\n    key: \"_onLayout\",\n    value: function _onLayout() {\n      var _Dimensions$get = Dimensions.get('window'),\n          width = _Dimensions$get.width,\n          height = _Dimensions$get.height;\n\n      this.setState({\n        width: width,\n        height: height\n      });\n    }\n  }, {\n    key: \"_handleNextPress\",\n    value: function _handleNextPress(question_id, answer) {\n      var _this4 = this;\n\n      var next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      console.log(question_id, next, answer);\n\n      if (answer) {\n        var nextId = 0;\n\n        if (next) {\n          nextId = this.state.ids_arr.indexOf(next);\n        }\n\n        var nextPage = next ? nextId : this.state.currentPage + 1;\n        var questionIndex = this.state.ids_arr.indexOf(question_id);\n        var tempQuestion = this.state.data[questionIndex];\n        var totalAmount = this.state.total_amount;\n        console.log('question', tempQuestion);\n\n        if (tempQuestion.category.toLowerCase() == 'amount' && tempQuestion.type == 'TEXT') {\n          console.log('set the total amount', answer);\n          totalAmount = parseInt(answer);\n          this.setState({\n            total_amount: totalAmount\n          });\n        } else if (tempQuestion.category.toLowerCase() == 'tax' && tempQuestion.type == 'SELECT') {\n          var _temp = parseInt(answer);\n\n          var tempTax = (totalAmount * _temp / 100).toFixed(2);\n          console.log(totalAmount, tempTax, 'TAX');\n          totalAmount -= tempTax;\n          this.setState({\n            total_amount: totalAmount\n          });\n        } else if (tempQuestion.category.toLowerCase() != 'amount' && tempQuestion.type == 'TEXT') {\n          console.log('minus the total amount', answer);\n          totalAmount = this.state.total_amount - parseInt(answer);\n          this.setState({\n            total_amount: totalAmount\n          });\n        }\n\n        var temp = this.state.category_data;\n        temp[tempQuestion.category.toLowerCase()] = tempQuestion.type != 'RADIO' ? answer : 0;\n        this.setState({\n          category_data: temp\n        });\n\n        if (nextPage < this.state.data.length && next != 0) {\n          Keyboard.dismiss();\n          this.flatList.scrollToIndex({\n            animated: true,\n            index: nextPage\n          });\n          this.setState({\n            currentPage: nextPage,\n            current_ques_no: this.state.current_ques_no + 1\n          });\n\n          if (this.focusArea[nextPage]) {\n            this.focusArea[nextPage].focus();\n          }\n        } else {\n          console.log(this.state.category_data);\n          var tempTotal = parseInt(this.state.category_data['amount']);\n          var tempReturnTotal = tempTotal;\n          var tempCategories = [];\n          Object.keys(this.state.category_data).forEach(function (val) {\n            if (val != 'amount') {\n              var _temp2 = _this4.state.category_data[val];\n\n              if (val != 'tax') {\n                tempReturnTotal -= _temp2;\n              } else {}\n\n              var tempPercetage = (_temp2 * 100 / tempTotal).toFixed(2);\n            }\n          });\n\n          if (this.state.total_amount > 0) {\n            var tempPercetage = (totalAmount * 100 / tempTotal).toFixed(2);\n          }\n\n          Object.keys(this.temp_taxes).forEach(function (val) {\n            var tempPercetage = parseInt(_this4.temp_taxes[val]);\n            var tempAmount = (tempReturnTotal * tempPercetage / 100).toFixed(2);\n            tempCategories.push({\n              id: Date.now(),\n              title: val,\n              percentage: tempPercetage,\n              amount: tempAmount,\n              is_locked: false\n            });\n          });\n          console.log(tempCategories, tempReturnTotal);\n          this.props.actionSetTotalAmount(tempReturnTotal);\n          this.props.actionSetBudgetCategories(tempCategories);\n          serviceUpdateBudget({\n            budget: tempCategories,\n            total_amount: tempReturnTotal\n          });\n          this.props.navigator.resetTo({\n            screen: 'survey.Success',\n            navigatorStyle: {\n              navBarHidden: true\n            }\n          });\n        }\n      } else {\n        Snackbar.show({\n          title: 'Please Answer Before Next Question',\n          duration: Snackbar.LENGTH_SHORT\n        });\n      }\n    }\n  }, {\n    key: \"_keyExtractor\",\n    value: function _keyExtractor(item, index) {\n      return item.id.toString();\n    }\n  }, {\n    key: \"_renderItem\",\n    value: function _renderItem(_ref2) {\n      var _this5 = this;\n\n      var item = _ref2.item,\n          index = _ref2.index;\n      this.focusArea[index] = null;\n      return React.createElement(QuestionItem, {\n        inputRef: function inputRef(r) {\n          if (r) {\n            _this5.textRef = _objectSpread(_objectSpread({}, _this5.textRef), {}, _defineProperty({}, \"REF-FLATLIST\" + index, r));\n\n            if (_this5.focusArea[index] == null) {\n              _this5.focusArea[index] = r;\n            }\n          }\n        },\n        index: index,\n        current_ques_no: this.state.current_ques_no,\n        data: item,\n        nextPress: this._handleNextPress,\n        total_amount: this.state.total_amount,\n        call_notification: this._callNotificationMethod,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }\n      });\n    }\n  }, {\n    key: \"_renderContent\",\n    value: function _renderContent() {\n      var _this6 = this;\n\n      console.log(this.state.is_fetching, this.state.interactionsComplete, this.state.is_error);\n\n      if (this.state.is_fetching && this.state.interactionsComplete) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 93\n          }\n        }));\n      } else if (this.state.is_error) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: [styles.nextButton, {\n            backgroundColor: 'transparent',\n            borderColor: colors.white,\n            borderWidth: 1,\n            marginTop: 10\n          }],\n          onPress: function onPress() {\n            _this6._getQuestions();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.buttonStyle, {\n            color: colors.white\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 21\n          }\n        }, \"RETRY\")));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          onLayout: this._onLayout,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 22\n          }\n        }, React.createElement(FlatList, {\n          keyboardShouldPersistTaps: \"always\",\n          ref: function ref(list) {\n            _this6.flatList = list;\n          },\n          scrollEnabled: false,\n          data: this.state.data,\n          pagingEnabled: true,\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          renderItem: this._renderItem,\n          keyExtractor: this._keyExtractor,\n          onViewableItemsChanged: this._onSwipeChange,\n          viewabilityConfig: itemVisibleHotfix,\n          initialNumToRender: 1,\n          extraData: this.state,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../resources/ic_background.jpg\"),\n        style: {\n          width: getWidthByPerc(100),\n          height: getHeightByPerc(100)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 17\n        }\n      }, this._renderContent()));\n    }\n  }]);\n\n  return QuestionList;\n}(Component);\n\nQuestionList.navigatorStyle = {\n  statusBarColor: 'transparent',\n  statusBarTextColorScheme: 'light',\n  navBarHidden: true,\n  drawUnderStatusBar: true\n};\nvar styles = StyleSheet.create({\n  questionContainer: {\n    flex: 1,\n    paddingHorizontal: 20,\n    justifyContent: 'space-around'\n  },\n  questionCard: {\n    flex: 4,\n    marginTop: 10\n  },\n  questionText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.white\n  },\n  nextButton: {\n    paddingVertical: 10,\n    backgroundColor: colors.white,\n    width: getWidthByPerc(100, 40)\n  },\n  buttonStyle: {\n    textAlign: 'center',\n    fontSize: 20,\n    color: colors.black\n  },\n  numberStyle: {\n    fontSize: 20,\n    color: colors.white\n  }\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    actionSetBudgetCategories: actionSetBudgetCategories,\n    actionSetTotalAmount: actionSetTotalAmount\n  }, dispatch);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    budget_total: state.budget.total\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionList);","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/QuestionList.screen.js"],"names":["React","Component","_","Snackbar","connect","bindActionCreators","fixStyles","colors","getWidthByPerc","getHeightByPerc","QuestionItem","Data","serviceGetQuestions","serviceUpdateBudget","actionSetBudgetCategories","actionSetTotalAmount","KeyboardManager","itemVisibleHotfix","minimumViewTime","viewAreaCoveragePercentThreshold","waitForInteraction","itemVisiblePercentThresold","QuestionList","props","_onSwipeChange","viewableItems","console","log","state","currentPage","index","setState","previousPage","flatList","focusArea","width","height","data","ids_arr","current_ques_no","category_data","total_amount","interactionsComplete","is_fetching","is_error","_onLayout","bind","_renderItem","_keyExtractor","_handleNextPress","_callNotification","_callNotificationMethod","debounce","_getQuestions","temp_taxes","food","travel","spendable","Platform","OS","setEnable","setEnableAutoToolbar","InteractionManager","runAfterInteractions","tempCategories","amount","id","is_locked","percentage","title","then","error","tempData","temp","tempIds","Object","keys","forEach","val","push","parseInt","navigator","showInAppNotification","screen","passProps","text","autoDismissTimerSec","Dimensions","get","question_id","answer","next","nextId","indexOf","nextPage","questionIndex","tempQuestion","totalAmount","category","toLowerCase","type","tempTax","toFixed","length","Keyboard","dismiss","scrollToIndex","animated","focus","tempTotal","tempReturnTotal","tempPercetage","tempAmount","Date","now","budget","resetTo","navigatorStyle","navBarHidden","show","duration","LENGTH_SHORT","item","toString","r","textRef","flex","justifyContent","alignItems","styles","nextButton","backgroundColor","borderColor","white","borderWidth","marginTop","fontContainer","buttonStyle","color","list","require","_renderContent","statusBarColor","statusBarTextColorScheme","drawUnderStatusBar","StyleSheet","create","questionContainer","paddingHorizontal","questionCard","questionText","fontSize","fontWeight","paddingVertical","textAlign","black","numberStyle","mapDispatchToProps","dispatch","mapStateToProps","budget_total","total"],"mappings":"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","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 18/09/18.\n */\n\nimport React, { Component } from  'react';\nimport { View, ImageBackground, Text, StyleSheet, Platform, TouchableOpacity, Dimensions, FlatList, Keyboard, InteractionManager, ActivityIndicator } from 'react-native';\nimport _ from 'lodash';\nimport Snackbar from 'react-native-snackbar';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport fixStyles, { colors } from '../styles/index.style';\nimport { getWidthByPerc, getHeightByPerc } from '../styles/StyleUtils.style';\nimport QuestionItem from '../components/Questions/Item.component';\nimport Data from '../config/data.json';\nimport { serviceGetQuestions, serviceUpdateBudget } from '../services/Home.service';\nimport { actionSetBudgetCategories, actionSetTotalAmount } from '../actions/Budget.action';\nimport KeyboardManager from 'react-native-keyboard-manager';\n\nconst itemVisibleHotfix = {\n    minimumViewTime: 3000,\n    viewAreaCoveragePercentThreshold: 100,\n    waitForInteraction: true,\n    itemVisiblePercentThresold: 100,\n}\nclass QuestionList extends Component {\n    static navigatorStyle = {\n        statusBarColor: 'transparent',\n        statusBarTextColorScheme: 'light',\n        navBarHidden: true,\n        drawUnderStatusBar: true\n    };\n\n    constructor(props) {\n        super(props);\n        this.flatList = null;\n        this.focusArea = [];\n        this.state= {\n            width: null,\n            height: null,\n            data: [],\n            ids_arr: [],\n            currentPage: 0,\n            current_ques_no: 1,\n            category_data: [],\n            total_amount: null,\n            interactionsComplete: false,\n            is_fetching: true,\n            is_error: false,\n        };\n        this._onLayout = this._onLayout.bind(this);\n        this._renderItem = this._renderItem.bind(this);\n        this._keyExtractor = this._keyExtractor.bind(this);\n        this._onSwipeChange = this._onSwipeChange.bind(this);\n        this._handleNextPress = this._handleNextPress.bind(this);\n        this._callNotification = this._callNotification.bind(this);\n        this._callNotificationMethod = _.debounce(this._callNotification, 500);\n        this._getQuestions = this._getQuestions.bind(this);\n        this.temp_taxes = {'charity': 10, 'saving': 10, 'rent': 35, 'gas': 15, food: 10,\n            travel: 10, spendable: 10}\n    }\n    componentDidMount() {\n        if(Platform.OS == 'ios') {\n            KeyboardManager.setEnable(false);\n            KeyboardManager.setEnableAutoToolbar(false);\n        }\n        InteractionManager.runAfterInteractions(() => {\n           this.setState({ interactionsComplete: true });\n        });\n        const tempCategories = [\n            {amount: \"53\",\n                id: 1541075715403,\n                is_locked: false,\n                percentage: 10,\n                title: \"charity\",\n            },\n            {\n                amount: \"53\",\n                id: 1541075715403,\n                is_locked: false,\n                percentage: 10,\n                title: \"saving\",\n            },\n            {\n                amount: \"185.5\",\n                id: 1541075715403,\n                is_locked: false,\n                percentage: 35,\n                title: \"rent\",\n            },\n            {\n                amount: \"79.5\",\n                id: 1541075715403,\n                is_locked: false,\n                percentage: 15,\n                title: \"gas\",\n            },\n            {\n                amount: \"53\",\n                id: 1541075715403,\n                is_locked: false,\n                percentage: 10,\n                title: \"food\",\n            },\n            {\n                amount: \"53\",\n                id: 1541075715403,\n                is_locked: false,\n                percentage: 10,\n                title: \"travel\",\n            },\n            {\n                amount: \"53\",\n                id: 1541075715403,\n                is_locked: true,\n                percentage: 10,\n                title: \"spendable\",\n            }\n        ];\n        // this.props.actionSetTotalAmount(530);\n        //\n        // this.props.actionSetBudgetCategories(tempCategories);\n        // this.props.navigator.resetTo({\n        //     screen: 'survey.Success',\n        //     navigatorStyle: {\n        //         navBarHidden: true\n        //     }\n        // });\n        this._getQuestions();\n    }\n    _getQuestions() {\n        this.setState({ is_fetching: true, is_error: false });\n        serviceGetQuestions({}).then((data) => {\n            console.log('data',data);\n            if(!data.error) {\n                const tempData = data.data;\n                const temp = [];\n                const tempIds = [];\n                Object.keys(tempData).forEach((val) => {\n                    tempIds.push(parseInt(val));\n                    temp.push(tempData[val]);\n                });\n                this.setState({data: temp, ids_arr: tempIds, is_fetching: false, is_error: false});\n            } else {\n                this.setState({ is_fetching: false, is_error: true });\n\n            }\n        })\n    }\n    _callNotification() {\n        this.props.navigator.showInAppNotification({\n            screen: 'survey.Notification',\n            passProps: { text: 'Please enter amount less than total amount' },\n            autoDismissTimerSec: 1,\n        })\n    }\n\n    _handleRadioPress(data) {\n        console.log(data);\n    }\n    _onLayout() {\n        const { width, height } = Dimensions.get('window');\n        this.setState({ width, height });\n    }\n    _onSwipeChange = ({ viewableItems }) => {\n        console.log(viewableItems);\n        if (!viewableItems[0] || this.state.currentPage === viewableItems[0].index)\n            return;\n\n        this.setState(state => {\n            return {\n                previousPage: state.currentPage,\n                currentPage: viewableItems[0].index,\n                // backgroundColorAnim: new Animated.Value(0),\n            };\n        });\n    };\n    _handleNextPress(question_id, answer, next=null) {\n        // // console.log('REFS', this.refs, this.textRef);\n        // console.log('focusArea', this.focusArea);\n        console.log(question_id, next , answer);\n        if(answer) {\n            let nextId = 0;\n            if(next) {\n                nextId = this.state.ids_arr.indexOf(next);\n            }\n            const nextPage = (next) ? nextId : this.state.currentPage + 1;\n\n            const questionIndex = this.state.ids_arr.indexOf(question_id);\n            const tempQuestion = this.state.data[questionIndex];\n            let totalAmount = this.state.total_amount;\n            console.log('question', tempQuestion);\n            // set the total amount value here\n            if(tempQuestion.category.toLowerCase() == 'amount' && tempQuestion.type == 'TEXT') {\n                console.log('set the total amount', answer);\n                totalAmount = parseInt(answer);\n                this.setState({ total_amount: totalAmount });\n            } else if(tempQuestion.category.toLowerCase() == 'tax' && tempQuestion.type == 'SELECT') {\n                const temp =parseInt(answer);\n                const tempTax = (((totalAmount * temp) / 100 )).toFixed(2);\n                console.log(totalAmount, tempTax, 'TAX');\n                totalAmount -= tempTax;\n\n                this.setState({ total_amount: totalAmount });\n            } else if(tempQuestion.category.toLowerCase() != 'amount' && tempQuestion.type == 'TEXT') {\n                console.log('minus the total amount', answer);\n                totalAmount = this.state.total_amount - parseInt(answer);\n                this.setState({ total_amount: totalAmount });\n            }\n\n            const temp = this.state.category_data;\n            temp[(tempQuestion.category).toLowerCase()] = tempQuestion.type != 'RADIO' ? answer : 0;\n            this.setState({ category_data: temp  });\n            if (nextPage < this.state.data.length && next !=0) {\n                Keyboard.dismiss();\n                this.flatList.scrollToIndex({\n                    animated: true,\n                    index: nextPage\n                });\n\n                this.setState({currentPage: nextPage, current_ques_no: this.state.current_ques_no + 1 });\n                if(this.focusArea[nextPage]) {\n                    (this.focusArea[nextPage]).focus();\n                }\n\n            } else {\n                console.log(this.state.category_data);\n                const tempTotal = parseInt(this.state.category_data['amount']);\n                let tempReturnTotal = tempTotal;\n                // this.props.actionSetTotalAmount(tempTotal);\n                const tempCategories = [];\n                Object.keys(this.state.category_data).forEach((val) => {\n                    if(val != 'amount') {\n                        const temp = this.state.category_data[val];\n                        if(val != 'tax') {\n                            tempReturnTotal -= temp;\n                        } else {\n                            // const tempTax = (((tempTotal * temp) / 100 )).toFixed(2);\n                            // tempReturnTotal -= tempTax;\n                        }\n                        const tempPercetage = ((temp * 100 / tempTotal)).toFixed(2);\n                        // tempCategories.push({\n                        //     id: Date.now(),\n                        //     title: val,\n                        //     percentage: tempPercetage,\n                        //     amount: temp,\n                        //     is_locked: false,\n                        // })\n                    }\n                });\n                if(this.state.total_amount > 0) {\n                    const tempPercetage = ((totalAmount * 100 / tempTotal)).toFixed(2);\n                    // tempCategories.push({\n                    //     id: Date.now(),\n                    //     title: 'spendable',\n                    //     percentage: tempPercetage,\n                    //     amount: totalAmount,\n                    //     is_locked: false,\n                    // })\n                }\n                Object.keys(this.temp_taxes).forEach((val) => {\n                    const tempPercetage = (parseInt(this.temp_taxes[val]));\n                    const tempAmount = (((tempReturnTotal * tempPercetage) / 100 )).toFixed(2);\n                    tempCategories.push({\n                        id: Date.now(),\n                        title: val,\n                        percentage: tempPercetage,\n                        amount: tempAmount,\n                        is_locked: false,\n                    })\n                });\n                console.log(tempCategories, tempReturnTotal);\n                this.props.actionSetTotalAmount(tempReturnTotal);\n\n                this.props.actionSetBudgetCategories(tempCategories);\n                serviceUpdateBudget({budget: tempCategories, total_amount: tempReturnTotal });\n                this.props.navigator.resetTo({\n                    screen: 'survey.Success',\n                    navigatorStyle: {\n                        navBarHidden: true\n                    }\n                });\n            }\n        } else {\n            Snackbar.show({\n                title: 'Please Answer Before Next Question',\n                duration: Snackbar.LENGTH_SHORT\n            })\n        }\n    }\n    _keyExtractor(item, index) {\n        return item.id.toString();\n    }\n    _renderItem({item, index}) {\n        this.focusArea[index] = null;\n        return (<QuestionItem\n            inputRef={(r) => { if(r) {\n                this.textRef = { ...this.textRef, [`REF-FLATLIST${index}`] : r }\n                if(this.focusArea[index] == null) {\n                    this.focusArea[index] = r;\n                }\n            } }}\n            index={index}\n            current_ques_no={this.state.current_ques_no}\n            data={item}\n            nextPress={this._handleNextPress}\n            total_amount={this.state.total_amount}\n            call_notification={this._callNotificationMethod}\n        />);\n    }\n    _renderContent() {\n        console.log(this.state.is_fetching, this.state.interactionsComplete, this.state.is_error);\n        if(this.state.is_fetching && this.state.interactionsComplete) {\n            return (<View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}><ActivityIndicator size=\"large\"/></View>)\n        } else if(this.state.is_error) {\n            return (<View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n                <TouchableOpacity style={[\n                    styles.nextButton,\n                    {  backgroundColor: 'transparent',\n                        borderColor: colors.white,\n                        borderWidth: 1,\n                        marginTop: 10\n                    }]} onPress={() => { this._getQuestions() }}\n                >\n                    <Text style={[fixStyles.fontContainer, styles.buttonStyle, { color: colors.white }]}>\n                        RETRY\n                    </Text>\n                </TouchableOpacity>\n            </View>)\n        } else {\n            return(  <View style={{ flex: 1 }} onLayout={this._onLayout}>\n                <FlatList\n                    keyboardShouldPersistTaps=\"always\"\n                    ref={list => {\n                        this.flatList = list;\n                    }}\n                    scrollEnabled={false}\n                    data={this.state.data}\n                    pagingEnabled\n                    horizontal\n                    showsHorizontalScrollIndicator={false}\n                    renderItem={this._renderItem}\n                    keyExtractor={this._keyExtractor}\n                    onViewableItemsChanged={this._onSwipeChange}\n                    viewabilityConfig={itemVisibleHotfix}\n                    initialNumToRender={1}\n                    extraData={\n                        this.state // ensure that the list re-renders on orientation change\n                    }\n                />\n            </View>);\n\n        }\n    }\n    render() {\n        return (\n            <View style={{ flex: 1 }}>\n                <ImageBackground\n                    source={require('../resources/ic_background.jpg')}\n                    style={{ width: getWidthByPerc(100), height: getHeightByPerc(100) }}\n                >\n                    {this._renderContent()}\n                </ImageBackground>\n\n            </View>\n        )\n    }\n}\nconst styles = StyleSheet.create({\n    questionContainer: {\n        flex: 1,\n        paddingHorizontal: 20,\n        justifyContent: 'space-around'\n    },\n    questionCard: {\n        flex: 4,\n        marginTop: 10\n    },\n    questionText: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: colors.white\n    },\n    nextButton: {\n        paddingVertical:10,\n        backgroundColor: colors.white,\n        width: getWidthByPerc(100, 40),\n    },\n    buttonStyle: {\n        textAlign: 'center',\n        fontSize: 20,\n        color: colors.black\n    },\n    numberStyle: {\n        fontSize: 20,\n        color: colors.white\n    },\n\n});\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        actionSetBudgetCategories: actionSetBudgetCategories,\n        actionSetTotalAmount: actionSetTotalAmount\n    }, dispatch);\n}\nfunction mapStateToProps(state) {\n    return {\n        budget_total: state.budget.total,\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionList);"]},"metadata":{},"sourceType":"module"}