{"ast":null,"code":"import React from 'react';\nimport { Provider } from 'react-redux';\nimport { Navigation } from 'react-native-navigation';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport codepush from 'react-native-code-push';\nimport { registerScreens } from \"./src/screens.navigation\";\nimport Store from \"./store\";\nimport { colors } from \"./src/styles/index.style\";\nimport { getWidthByPerc } from \"./src/styles/StyleUtils.style\";\nimport { checkToken } from \"./src/actions/Auth.action\";\nimport { actionGetBudgetFromServer } from \"./src/actions/Budget.action\";\nregisterScreens(Store, Provider);\ncodepush.sync({\n  updateDialog: true,\n  installMode: codepush.InstallMode.IMMEDIATE\n});\nvar navigatorStyle = {\n  statusBarColor: 'transparent',\n  statusBarTextColorScheme: 'light',\n  navBarTitleTextCentered: true,\n  navBarBackgroundColor: colors.headerColor,\n  navBarTextColor: colors.headerFontColor,\n  navBarButtonColor: colors.headerFontColor,\n  drawUnderNavBar: true,\n  navBarHideOnScroll: true,\n  topBarElevationShadowEnabled: false,\n  navBarHidden: true,\n  drawUnderStatusBar: true\n};\nAsyncStorage.getItem('auth_user').then(function (value) {\n  if (value) {\n    Store.dispatch(checkToken(value));\n    Store.dispatch(actionGetBudgetFromServer());\n    Navigation.startSingleScreenApp({\n      screen: {\n        screen: 'survey.Result',\n        title: 'Result',\n        navigatorStyle: navigatorStyle\n      },\n      animationType: 'fade'\n    });\n  } else {\n    Navigation.startSingleScreenApp({\n      screen: {\n        screen: 'survey.Signup',\n        title: 'Signup',\n        navigatorStyle: navigatorStyle\n      },\n      animationType: 'fade'\n    });\n  }\n});","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/App.js"],"names":["React","Provider","Navigation","AsyncStorage","codepush","registerScreens","Store","colors","getWidthByPerc","checkToken","actionGetBudgetFromServer","sync","updateDialog","installMode","InstallMode","IMMEDIATE","navigatorStyle","statusBarColor","statusBarTextColorScheme","navBarTitleTextCentered","navBarBackgroundColor","headerColor","navBarTextColor","headerFontColor","navBarButtonColor","drawUnderNavBar","navBarHideOnScroll","topBarElevationShadowEnabled","navBarHidden","drawUnderStatusBar","getItem","then","value","dispatch","startSingleScreenApp","screen","title","animationType"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,yBAA3B;SACSC,Y;AACT,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,eAAT;AACA,OAAOC,KAAP;AACA,SAASC,MAAT;AACA,SAASC,cAAT;AACA,SAASC,UAAT;AACA,SAASC,yBAAT;AAGAL,eAAe,CAACC,KAAD,EAAQL,QAAR,CAAf;AAGAG,QAAQ,CAACO,IAAT,CAAc;AACVC,EAAAA,YAAY,EAAE,IADJ;AAEVC,EAAAA,WAAW,EAAET,QAAQ,CAACU,WAAT,CAAqBC;AAFxB,CAAd;AAKA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,cAAc,EAAE,aADG;AAEnBC,EAAAA,wBAAwB,EAAE,OAFP;AAGnBC,EAAAA,uBAAuB,EAAE,IAHN;AAInBC,EAAAA,qBAAqB,EAAEb,MAAM,CAACc,WAJX;AAKnBC,EAAAA,eAAe,EAAEf,MAAM,CAACgB,eALL;AAMnBC,EAAAA,iBAAiB,EAAEjB,MAAM,CAACgB,eANP;AAOnBE,EAAAA,eAAe,EAAE,IAPE;AAQnBC,EAAAA,kBAAkB,EAAE,IARD;AASnBC,EAAAA,4BAA4B,EAAE,KATX;AAWnBC,EAAAA,YAAY,EAAE,IAXK;AAYnBC,EAAAA,kBAAkB,EAAE;AAZD,CAAvB;AAcA1B,YAAY,CAAC2B,OAAb,CAAqB,WAArB,EAAkCC,IAAlC,CAAuC,UAACC,KAAD,EAAW;AAE9C,MAAGA,KAAH,EAAU;AACN1B,IAAAA,KAAK,CAAC2B,QAAN,CAAexB,UAAU,CAACuB,KAAD,CAAzB;AACA1B,IAAAA,KAAK,CAAC2B,QAAN,CAAevB,yBAAyB,EAAxC;AACAR,IAAAA,UAAU,CAACgC,oBAAX,CAAgC;AAC5BC,MAAAA,MAAM,EAAE;AACJA,QAAAA,MAAM,EAAE,eADJ;AAEJC,QAAAA,KAAK,EAAE,QAFH;AAGJpB,QAAAA,cAAc,EAAdA;AAHI,OADoB;AAM5BqB,MAAAA,aAAa,EAAE;AANa,KAAhC;AAQH,GAXD,MAWO;AACHnC,IAAAA,UAAU,CAACgC,oBAAX,CAAgC;AAC5BC,MAAAA,MAAM,EAAE;AACJA,QAAAA,MAAM,EAAE,eADJ;AAEJC,QAAAA,KAAK,EAAE,QAFH;AAGJpB,QAAAA,cAAc,EAAdA;AAHI,OADoB;AAM5BqB,MAAAA,aAAa,EAAE;AANa,KAAhC;AAQH;AACJ,CAvBD","sourcesContent":["import React from 'react'; // eslint-disable-line\nimport { Provider } from 'react-redux';\nimport { Navigation } from 'react-native-navigation';\nimport { AsyncStorage } from 'react-native';\nimport codepush from 'react-native-code-push';\nimport { registerScreens } from './src/screens.navigation';\nimport Store from './store';\nimport { colors } from './src/styles/index.style';\nimport { getWidthByPerc } from './src/styles/StyleUtils.style';\nimport { checkToken } from './src/actions/Auth.action';\nimport { actionGetBudgetFromServer } from './src/actions/Budget.action';\n// const store = configureStore();\n\nregisterScreens(Store, Provider);\n// Store.dispatch(actionGetHomeData());\n\ncodepush.sync({\n    updateDialog: true,\n    installMode: codepush.InstallMode.IMMEDIATE,\n\n});\nconst navigatorStyle = {\n    statusBarColor: 'transparent',\n    statusBarTextColorScheme: 'light',\n    navBarTitleTextCentered: true,\n    navBarBackgroundColor: colors.headerColor,\n    navBarTextColor: colors.headerFontColor,\n    navBarButtonColor: colors.headerFontColor,\n    drawUnderNavBar: true,\n    navBarHideOnScroll: true,\n    topBarElevationShadowEnabled: false,\n    // tabBarHidden: true,\n    navBarHidden: true,\n    drawUnderStatusBar: true\n};\nAsyncStorage.getItem('auth_user').then((value) => {\n    // Store.dispatch(checkToken());\n    if(value) {\n        Store.dispatch(checkToken(value));\n        Store.dispatch(actionGetBudgetFromServer());\n        Navigation.startSingleScreenApp({\n            screen: {\n                screen: 'survey.Result',\n                title: 'Result',\n                navigatorStyle\n            },\n            animationType: 'fade'\n        });\n    } else {\n        Navigation.startSingleScreenApp({\n            screen: {\n                screen: 'survey.Signup',\n                title: 'Signup',\n                navigatorStyle\n            },\n            animationType: 'fade'\n        });\n    }\n});\n"]},"metadata":{},"sourceType":"module"}