{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { postRequest, formDataRequest } from \"../util/AxiosService.util\";\nexport function serviceVersionCheck(params) {\n  return _regeneratorRuntime.async(function serviceVersionCheck$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('versioncheck', params));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceLogout(params) {\n  return _regeneratorRuntime.async(function serviceLogout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('logout', params));\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceLogin(params) {\n  return _regeneratorRuntime.async(function serviceLogin$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('login', params));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceSignup(params) {\n  return _regeneratorRuntime.async(function serviceSignup$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('signup', params));\n\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceIsUser(params) {\n  return _regeneratorRuntime.async(function serviceIsUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('isuser', params));\n\n        case 2:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function CaptureInfoService(params) {\n  return _regeneratorRuntime.async(function CaptureInfoService$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('captureinfo', params));\n\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceForgotPassword(params) {\n  return _regeneratorRuntime.async(function serviceForgotPassword$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('forgotpassword', params));\n\n        case 2:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceSocialLogin(params) {\n  return _regeneratorRuntime.async(function serviceSocialLogin$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('sociallogin', params));\n\n        case 2:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 3:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceUserProfile() {\n  return _regeneratorRuntime.async(function serviceUserProfile$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('profile', {}));\n\n        case 2:\n          return _context9.abrupt(\"return\", _context9.sent);\n\n        case 3:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceUpdateProfile(params) {\n  return _regeneratorRuntime.async(function serviceUpdateProfile$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return _regeneratorRuntime.awrap(formDataRequest('updateprofile', params));\n\n        case 2:\n          return _context10.abrupt(\"return\", _context10.sent);\n\n        case 3:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceChangePassword(params) {\n  return _regeneratorRuntime.async(function serviceChangePassword$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('changepassword', params));\n\n        case 2:\n          return _context11.abrupt(\"return\", _context11.sent);\n\n        case 3:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceGetTNC(params) {\n  return _regeneratorRuntime.async(function serviceGetTNC$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('gettc', params));\n\n        case 2:\n          return _context12.abrupt(\"return\", _context12.sent);\n\n        case 3:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceContact(params) {\n  return _regeneratorRuntime.async(function serviceContact$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('contact', params));\n\n        case 2:\n          return _context13.abrupt(\"return\", _context13.sent);\n\n        case 3:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceNotificationStatus(params) {\n  return _regeneratorRuntime.async(function serviceNotificationStatus$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('notification/status', params));\n\n        case 2:\n          return _context14.abrupt(\"return\", _context14.sent);\n\n        case 3:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function serviceNotificationStatusUpdate(params) {\n  return _regeneratorRuntime.async(function serviceNotificationStatusUpdate$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return _regeneratorRuntime.awrap(postRequest('notification/status/update', params));\n\n        case 2:\n          return _context15.abrupt(\"return\", _context15.sent);\n\n        case 3:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/services/Auth.service.js"],"names":["postRequest","formDataRequest","serviceVersionCheck","params","serviceLogout","serviceLogin","serviceSignup","serviceIsUser","CaptureInfoService","serviceForgotPassword","serviceSocialLogin","serviceUserProfile","serviceUpdateProfile","serviceChangePassword","serviceGetTNC","serviceContact","serviceNotificationStatus","serviceNotificationStatusUpdate"],"mappings":"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","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 03/04/18.\n */\n\nimport { postRequest, formDataRequest } from '../util/AxiosService.util';\n\nexport async function serviceVersionCheck(params) {\n    return await postRequest('versioncheck', params);\n}\nexport async function serviceLogout(params) {\n    return await postRequest('logout', params);\n}\nexport async function serviceLogin(params) {\n    return await postRequest('login', params);\n}\n\nexport async function serviceSignup(params) {\n    return await postRequest('signup', params);\n}\n\nexport async function serviceIsUser(params) {\n    return await postRequest('isuser', params);\n}\n\nexport async function CaptureInfoService(params) {\n    return await postRequest('captureinfo', params);\n}\n\nexport async function serviceForgotPassword(params) {\n    return await postRequest('forgotpassword', params);\n}\n\nexport async function serviceSocialLogin(params) {\n    return await postRequest('sociallogin', params);\n}\n\nexport async function serviceUserProfile() {\n    return await postRequest('profile', {});\n}\n\nexport async function serviceUpdateProfile(params) {\n    return await formDataRequest('updateprofile', params);\n}\n\nexport async function serviceChangePassword(params) {\n    return await postRequest('changepassword', params);\n}\n\nexport async function serviceGetTNC(params) {\n    return await postRequest('gettc', params);\n}\n\nexport async function serviceContact(params) {\n    return await postRequest('contact', params);\n}\n\nexport async function serviceNotificationStatus(params) {\n    return await postRequest('notification/status', params);\n}\n\nexport async function serviceNotificationStatusUpdate(params) {\n    return await postRequest('notification/status/update', params);\n}"]},"metadata":{},"sourceType":"module"}