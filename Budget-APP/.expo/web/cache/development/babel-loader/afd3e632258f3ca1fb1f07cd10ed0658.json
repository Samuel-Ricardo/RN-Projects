{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/components/Questions/Item.component.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport PropTypes from 'prop-types';\nimport Snackbar from 'react-native-snackbar';\nimport RadioGroup from \"../RadioGroup.component\";\nimport fixStyles, { colors } from \"../../styles/index.style\";\nimport { getHeightByPerc, getWidthByPerc } from \"../../styles/StyleUtils.style\";\nimport AutoCompletion from \"./AutoComplete.component\";\nimport { numberWithCommas } from \"../../util/Common.util\";\nvar numReg = new RegExp(/^\\d+$/);\n\nvar QuestionItem = function (_React$PureComponent) {\n  _inherits(QuestionItem, _React$PureComponent);\n\n  var _super = _createSuper(QuestionItem);\n\n  function QuestionItem(props) {\n    var _this;\n\n    _classCallCheck(this, QuestionItem);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      answer: '',\n      next: null,\n      marginHeight: 0\n    }, _this._handleRadioPress = _this._handleRadioPress.bind(_assertThisInitialized(_this));\n    _this._handleTextChange = _this._handleTextChange.bind(_assertThisInitialized(_this));\n    _this._handleNextButton = _this._handleNextButton.bind(_assertThisInitialized(_this));\n    _this._keyboardDidShow = _this._keyboardDidShow.bind(_assertThisInitialized(_this));\n    _this._keyboardDidHide = _this._keyboardDidHide.bind(_assertThisInitialized(_this));\n    _this.scrollView = null;\n    return _this;\n  }\n\n  _createClass(QuestionItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.data.type == 'RADIO') {\n        if (this.props.data.category.toLowerCase() != 'amount') {\n          this.setState({\n            answer: this.props.data.data.length > 0 ? this.props.data.data[0].value : 0,\n            next: this.props.data.data.length > 0 ? parseInt(this.props.data.data[0].next) : 0\n          });\n        } else {\n          this.setState({\n            next: this.props.data.data.length > 0 ? parseInt(this.props.data.data[0].next) : 0\n          });\n        }\n      } else {\n        this.setState({\n          next: 'next' in this.props.data ? parseInt(this.props.data.next) : null\n        });\n      }\n\n      this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this._keyboardDidShow);\n      this.keyboardDidHideListener = Keyboard.addListener('keyboardWillHide', this._keyboardDidHide);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.keyboardDidShowListener.remove();\n      this.keyboardDidHideListener.remove();\n    }\n  }, {\n    key: \"_keyboardDidShow\",\n    value: function _keyboardDidShow() {\n      this.setState({\n        marginHeight: 50\n      });\n    }\n  }, {\n    key: \"_keyboardDidHide\",\n    value: function _keyboardDidHide() {\n      this.setState({\n        marginHeight: 0\n      });\n    }\n  }, {\n    key: \"_handleRadioPress\",\n    value: function _handleRadioPress(data) {\n      this.setState({\n        answer: data.value,\n        next: parseInt(data.next)\n      });\n    }\n  }, {\n    key: \"_handleTextChange\",\n    value: function _handleTextChange(tempText) {\n      var text = tempText.replace(/,/g, '');\n\n      if (numReg.test(text) || text == \"\") {\n        if (this.props.total_amount != null) {\n          if (text == \"\") {\n            this.setState({\n              answer: text\n            });\n          } else if (this.props.total_amount - parseInt(text) >= 0) {\n            this.setState({\n              answer: text\n            });\n          } else {\n            this.props.call_notification();\n          }\n        } else {\n          this.setState({\n            answer: text\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_handleNextButton\",\n    value: function _handleNextButton(data) {\n      this.props.nextPress(data.id, this.state.answer, this.state.next);\n    }\n  }, {\n    key: \"_renderInput\",\n    value: function _renderInput(data) {\n      var _this2 = this;\n\n      if (data.type == 'RADIO') {\n        return React.createElement(RadioGroup, {\n          radioButtons: data.data,\n          category: data.category,\n          onPress: this._handleRadioPress,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }\n        });\n      } else if (data.type == 'TEXT') {\n        return React.createElement(TextInput, {\n          ref: function ref(r) {\n            _this2.props.inputRef && _this2.props.inputRef(r);\n          },\n          value: numberWithCommas(this.state.answer),\n          style: styles.inputStyle,\n          placeholder: 'Enter Data Here',\n          placeholderTextColor: colors.placeholderTextColor,\n          onChangeText: this._handleTextChange,\n          keyboardType: 'numeric',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }\n        });\n      } else if (data.type == 'SELECT') {\n        return React.createElement(AutoCompletion, {\n          inputRef: function inputRef(r) {\n            _this2.props.inputRef && _this2.props.inputRef(r);\n          },\n          onSelection: this._handleTextChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        behavior: \"padding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: {\n          flex: 1\n        },\n        behavior: \"padding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        keyboardShouldPersistTaps: 'always',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        style: styles.questionContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 0.5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: 'white',\n          paddingHorizontal: 10,\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1.5,\n          justifyContent: 'flex-end'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.numberStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 41\n        }\n      }, this.props.current_ques_no, \".\"), React.createElement(View, {\n        style: fixStyles.textUnderLine,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 41\n        }\n      })), React.createElement(View, {\n        style: styles.questionCard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.questionText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 41\n        }\n      }, this.props.data.question), this._renderInput(this.props.data))), React.createElement(View, {\n        style: {\n          flex: 0.2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      }))), React.createElement(TouchableOpacity, {\n        style: styles.nextButton,\n        onPress: function onPress() {\n          _this3._handleNextButton(_this3.props.data);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: [fixStyles.fontContainer, styles.buttonStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, \"NEXT\")))));\n    }\n  }]);\n\n  return QuestionItem;\n}(React.PureComponent);\n\nvar styles = StyleSheet.create({\n  questionContainer: {\n    flex: 1,\n    paddingHorizontal: 15,\n    justifyContent: 'space-around',\n    width: getWidthByPerc(100),\n    height: getHeightByPerc(100)\n  },\n  questionCard: {\n    flex: 4,\n    marginTop: 10\n  },\n  questionText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: colors.black\n  },\n  nextButton: {\n    paddingVertical: 10,\n    backgroundColor: colors.white\n  },\n  buttonStyle: {\n    textAlign: 'center',\n    fontSize: 20,\n    color: colors.black\n  },\n  numberStyle: {\n    fontSize: 20,\n    color: colors.black\n  },\n  inputStyle: {\n    height: 40,\n    borderBottomWidth: 3,\n    borderBottomColor: colors.black,\n    marginVertical: 10,\n    color: colors.black,\n    fontSize: 16,\n    fontFamily: 'Roboto'\n  }\n});\nQuestionItem.propTypes = {\n  data: PropTypes.object.isRequired,\n  nextPress: PropTypes.func.isRequired,\n  current_ques_no: PropTypes.number\n};\nQuestionItem.defaultProps = {\n  data: {},\n  current_ques_no: 1\n};\nexport default QuestionItem;","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/components/Questions/Item.component.js"],"names":["React","KeyboardAwareScrollView","PropTypes","Snackbar","RadioGroup","fixStyles","colors","getHeightByPerc","getWidthByPerc","AutoCompletion","numberWithCommas","numReg","RegExp","QuestionItem","props","state","answer","next","marginHeight","_handleRadioPress","bind","_handleTextChange","_handleNextButton","_keyboardDidShow","_keyboardDidHide","scrollView","data","type","category","toLowerCase","setState","length","value","parseInt","keyboardDidShowListener","Keyboard","addListener","keyboardDidHideListener","remove","tempText","text","replace","test","total_amount","call_notification","nextPress","id","r","inputRef","styles","inputStyle","placeholderTextColor","flex","questionContainer","backgroundColor","paddingHorizontal","justifyContent","fontContainer","numberStyle","current_ques_no","textUnderLine","questionCard","questionText","question","_renderInput","nextButton","buttonStyle","PureComponent","StyleSheet","create","width","height","marginTop","fontSize","fontWeight","color","black","paddingVertical","white","textAlign","borderBottomWidth","borderBottomColor","marginVertical","fontFamily","propTypes","object","isRequired","func","number","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 20/09/18.\n */\n\nimport React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, TextInput, KeyboardAvoidingView, ScrollView, Keyboard } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport PropTypes from 'prop-types';\nimport Snackbar from 'react-native-snackbar';\nimport RadioGroup from '../RadioGroup.component';\nimport fixStyles, { colors } from '../../styles/index.style';\nimport { getHeightByPerc, getWidthByPerc } from '../../styles/StyleUtils.style';\nimport AutoCompletion from './AutoComplete.component';\nimport { numberWithCommas } from '../../util/Common.util';\n\nconst numReg = new RegExp(/^\\d+$/);\n\nclass QuestionItem extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            answer: '',\n            next: null,\n            marginHeight: 0,\n\n        },\n            this._handleRadioPress = this._handleRadioPress.bind(this);\n        this._handleTextChange = this._handleTextChange.bind(this);\n        this._handleNextButton = this._handleNextButton.bind(this);\n        this._keyboardDidShow = this._keyboardDidShow.bind(this);\n        this._keyboardDidHide = this._keyboardDidHide.bind(this);\n        this.scrollView = null;\n\n    }\n\n    componentDidMount() {\n        if(this.props.data.type == 'RADIO') {\n            if(this.props.data.category.toLowerCase() != 'amount') {\n                this.setState({\n                    answer: this.props.data.data.length > 0 ? (this.props.data.data[0]).value : 0,\n                    next: this.props.data.data.length > 0 ? parseInt(((this.props.data.data[0]).next)) : 0,\n                })\n            } else {\n                this.setState({\n                    next: this.props.data.data.length > 0 ? parseInt(((this.props.data.data[0]).next)) : 0,\n                })\n            }\n        } else {\n            this.setState({\n                next: 'next' in this.props.data ? parseInt(this.props.data.next) : null,\n            })\n        }\n        this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this._keyboardDidShow);\n        this.keyboardDidHideListener = Keyboard.addListener('keyboardWillHide', this._keyboardDidHide);\n    }\n    componentWillUnmount () {\n        this.keyboardDidShowListener.remove();\n        this.keyboardDidHideListener.remove();\n    }\n    _keyboardDidShow () {\n        // alert('called');\n        // if(this.scrollView) {\n        //     alert('called');\n        //     this.scrollView.getNode().scrollTo({ x: 0, y: 0, animated: true});\n        // }\n        // alert('Keyboard Shown');\n        this.setState({ marginHeight: 50 });\n    }\n\n    _keyboardDidHide () {\n        this.setState({ marginHeight: 0 });\n        // alert('Keyboard Hidden');\n    }\n    _handleRadioPress(data) {\n        this.setState({ answer: data.value, next: parseInt(data.next) });\n    }\n\n    _handleTextChange(tempText) {\n        const text = tempText.replace(/,/g, '');\n        if(numReg.test(text) || text == \"\") {\n            // console.log(this.props.total_amount, text);\n            if (this.props.total_amount != null) {\n                if (text == \"\") {\n                    this.setState({answer: text});\n                }\n                else if ((this.props.total_amount - parseInt(text)) >= 0) {\n                    this.setState({answer: text});\n                } else {\n                    this.props.call_notification();\n                    // Snackbar.show({\n                    //     title: 'Please enter amount less than total amount',\n                    //     duration: Snackbar.LENGTH_SHORT\n                    // })\n                }\n            } else {\n                this.setState({answer: text});\n            }\n        }\n    }\n\n    _handleNextButton(data) {\n        this.props.nextPress(data.id, this.state.answer, this.state.next);\n    }\n    _renderInput(data) {\n        if(data.type == 'RADIO') {\n            return (\n                <RadioGroup radioButtons={data.data} category={data.category} onPress={this._handleRadioPress} />\n            );\n        } else if(data.type == 'TEXT') {\n            return (\n                <TextInput\n                    ref={(r) => { this.props.inputRef && this.props.inputRef(r) }}\n                    value={numberWithCommas(this.state.answer)}\n                    style={styles.inputStyle}\n                    placeholder={'Enter Data Here'}\n                    placeholderTextColor={colors.placeholderTextColor}\n                    onChangeText={this._handleTextChange}\n                    keyboardType={'numeric'}\n                />\n            );\n        } else if(data.type == 'SELECT') {\n            return (\n                <AutoCompletion\n                    inputRef={(r) => { this.props.inputRef && this.props.inputRef(r) }}\n                    onSelection={this._handleTextChange}\n                />\n            );\n        }\n        return null;\n    }\n    render() {\n        return (\n            <View behavior=\"padding\" >\n                <View style={{ flex: 1}}>\n                    <KeyboardAvoidingView style={{flex: 1}} behavior=\"padding\" >\n                        <View style={{flex:1}} keyboardShouldPersistTaps={'always'}>\n                            <View style={styles.questionContainer}>\n                                <View style={{ flex: 0.5 }}/>\n                                <View style={{ flex: 1, backgroundColor: 'white', paddingHorizontal: 10, justifyContent: 'center', }}>\n                                    <View style={{ flex: 1.5, justifyContent: 'flex-end' }}>\n                                        <Text style={[fixStyles.fontContainer, styles.numberStyle ]}>{this.props.current_ques_no}.</Text>\n                                        <View style={fixStyles.textUnderLine} />\n                                    </View>\n                                    <View style={styles.questionCard}>\n                                        <Text style={[ fixStyles.fontContainer, styles.questionText ]}>{this.props.data.question}</Text>\n                                        {this._renderInput(this.props.data)}\n                                    </View>\n                                </View>\n                                <View style={{flex: 0.2}}/>\n\n                            </View>\n                        </View>\n\n                        <TouchableOpacity style={styles.nextButton} onPress={() => {this._handleNextButton(this.props.data)}}>\n                            <Text style={[fixStyles.fontContainer, styles.buttonStyle ]}>NEXT</Text>\n                        </TouchableOpacity>\n                    </KeyboardAvoidingView>\n                </View>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    questionContainer: {\n        flex: 1,\n        paddingHorizontal: 15,\n        justifyContent: 'space-around',\n        width: getWidthByPerc(100),\n        height: getHeightByPerc(100),\n        // backgroundColor: 'red',\n    },\n    questionCard: {\n        flex: 4,\n        marginTop: 10\n    },\n    questionText: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: colors.black\n    },\n    nextButton: {\n        paddingVertical:10,\n        backgroundColor: colors.white,\n    },\n    buttonStyle: {\n        textAlign: 'center',\n        fontSize: 20,\n        color: colors.black\n    },\n    numberStyle: {\n        fontSize: 20,\n        color: colors.black\n    },\n    inputStyle: {\n        height: 40,\n        borderBottomWidth: 3,\n        borderBottomColor: colors.black,\n        marginVertical: 10,\n        color: colors.black,\n        fontSize: 16,\n        fontFamily: 'Roboto'\n    }\n});\nQuestionItem.propTypes = {\n    data: PropTypes.object.isRequired,\n    nextPress: PropTypes.func.isRequired,\n    current_ques_no: PropTypes.number,\n};\n\nQuestionItem.defaultProps = {\n    data: {},\n    current_ques_no: 1\n};\n\nexport default QuestionItem;"]},"metadata":{},"sourceType":"module"}