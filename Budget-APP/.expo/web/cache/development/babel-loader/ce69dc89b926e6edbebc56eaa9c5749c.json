{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/components/BudgetList.component.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListView } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StylesObj, { colors } from \"../styles/index.style\";\nimport BudgetItem from \"./BudgetListItem.component\";\n\nvar BudgetList = function (_Component) {\n  _inherits(BudgetList, _Component);\n\n  var _super = _createSuper(BudgetList);\n\n  function BudgetList(props) {\n    var _this;\n\n    _classCallCheck(this, BudgetList);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(BudgetList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"_renderRow\",\n    value: function _renderRow(rowData, sectionId, rowId, highlightRow) {\n      var rowHash = Math.abs(hashCode(rowData));\n      return React.createElement(BudgetItem, {\n        callNotificationMethod: this.props.callNotificationMethod,\n        handleTextChange: this.props.handleTextChange,\n        rowData: rowData,\n        rowId: rowId,\n        handleLock: this.props.handleLock,\n        max_percentage: this.props.max_percentage,\n        max_amount: this.props.max_amount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      });\n    }\n  }, {\n    key: \"handleSelection\",\n    value: function handleSelection() {\n      var _this2 = this;\n\n      var tempPressData = this._pressData;\n      var tempData = [];\n      Object.keys(this._pressData).forEach(function (val) {\n        if (tempPressData[val]) {\n          tempData.push(_this2.props.budget_data[val].text);\n        }\n      });\n      this.props.saveCategorySelection(tempData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, React.createElement(ListView, {\n        keyboardShouldPersistTaps: 'never',\n        dataSource: this.props.dataSource,\n        renderRow: this._renderRow.bind(this),\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return BudgetList;\n}(Component);\n\nvar hashCode = function hashCode(str) {\n  var hash = 15;\n\n  for (var ii = str.length - 1; ii >= 0; ii--) {\n    hash = (hash << 5) - hash + str.charCodeAt(ii);\n  }\n\n  return hash;\n};\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  thumb: {\n    width: 35,\n    height: 35\n  },\n  text: {\n    flex: 1,\n    paddingLeft: 10,\n    fontSize: 18,\n    color: colors.black\n  },\n  flexRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  listText: {\n    color: colors.black\n  },\n  paddingVertical: {\n    paddingVertical: 5\n  },\n  lockImage: {\n    width: 15,\n    height: 20\n  },\n  percentageInput: {\n    width: 30,\n    paddingVertical: 0,\n    textAlign: 'center'\n  },\n  amountInput: {\n    width: 50,\n    paddingVertical: 0,\n    textAlign: 'center'\n  },\n  inputUnderLine: {\n    borderBottomColor: colors.blue,\n    borderBottomWidth: 1\n  }\n});\nBudgetList.propTypes = {\n  multipleSelect: PropTypes.bool,\n  saveCategorySelection: PropTypes.func.isRequired,\n  auto_close: PropTypes.bool,\n  selection: PropTypes.bool,\n  showonly: PropTypes.bool,\n  budget_data: PropTypes.array.isRequired\n};\nBudgetList.defaultProps = {\n  multipleSelect: true,\n  auto_close: false,\n  selection: true,\n  showonly: false\n};\nexport default BudgetList;","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/components/BudgetList.component.js"],"names":["React","Component","PropTypes","ListView","StylesObj","colors","BudgetItem","BudgetList","props","state","rowData","sectionId","rowId","highlightRow","rowHash","Math","abs","hashCode","callNotificationMethod","handleTextChange","handleLock","max_percentage","max_amount","tempPressData","_pressData","tempData","Object","keys","forEach","val","push","budget_data","text","saveCategorySelection","flex","dataSource","_renderRow","bind","str","hash","ii","length","charCodeAt","styles","StyleSheet","create","row","flexDirection","alignItems","thumb","width","height","paddingLeft","fontSize","color","black","flexRow","justifyContent","listText","paddingVertical","lockImage","percentageInput","textAlign","amountInput","inputUnderLine","borderBottomColor","blue","borderBottomWidth","propTypes","multipleSelect","bool","func","isRequired","auto_close","selection","showonly","array","defaultProps"],"mappings":"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","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 28/09/18.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, ListView, Text, StyleSheet, Image, ImageBackground, Platform, TextInput, KeyboardAvoidingView } from 'react-native';\nimport StylesObj, {colors} from \"../styles/index.style\";\nimport BudgetItem from './BudgetListItem.component';\n\nclass BudgetList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    _pressData: { };\n    componentDidMount() {\n\n    }\n\n    _renderRow(rowData, sectionId, rowId, highlightRow: (sectionId, rowId) => void) {\n        const rowHash = Math.abs(hashCode(rowData));\n        return (<BudgetItem\n            callNotificationMethod={this.props.callNotificationMethod}\n            handleTextChange={this.props.handleTextChange}\n            rowData={rowData}\n            rowId={rowId}\n            handleLock={this.props.handleLock}\n            max_percentage={this.props.max_percentage}\n            max_amount={this.props.max_amount}\n        />)\n    }\n\n    handleSelection() {\n        const tempPressData = this._pressData;\n        const tempData = [];\n        Object.keys(this._pressData).forEach((val) => {\n            if(tempPressData[val]) {\n                tempData.push((this.props.budget_data[val]).text);\n            }\n        });\n        this.props.saveCategorySelection(tempData)\n    }\n    render() {\n        return(\n            <View style={{flex: 1}}>\n                <ListView\n                    keyboardShouldPersistTaps={'never'}\n                    dataSource={this.props.dataSource}\n                    renderRow={this._renderRow.bind(this)}\n                    style={{ flex: 1 }}\n\n                />\n            </View>\n        );\n    }\n}\n\nconst hashCode = function(str) {\n    let hash = 15;\n    for (let ii = str.length - 1; ii >= 0; ii--) {\n        hash = ((hash << 5) - hash) + str.charCodeAt(ii);\n    }\n    return hash;\n};\n\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    thumb: {\n        width: 35,\n        height: 35,\n    },\n    text: {\n        flex: 1,\n        paddingLeft: 10,\n        fontSize: 18,\n        color: colors.black\n    },\n    flexRow: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    listText: {\n        color: colors.black\n    },\n    paddingVertical: {\n        paddingVertical: 5\n    },\n    lockImage: {\n        width: 15,\n        height: 20,\n    },\n    percentageInput: {\n        width: 30,\n        paddingVertical: 0,\n        textAlign: 'center'\n    },\n    amountInput: {\n        width: 50,\n        paddingVertical: 0,\n        textAlign: 'center',\n\n    },\n    inputUnderLine: {\n        borderBottomColor: colors.blue,\n        borderBottomWidth: 1,\n\n    }\n});\n\nBudgetList.propTypes = {\n    multipleSelect: PropTypes.bool,\n    saveCategorySelection: PropTypes.func.isRequired,\n    auto_close: PropTypes.bool,\n    selection: PropTypes.bool,\n    showonly: PropTypes.bool,\n    budget_data: PropTypes.array.isRequired\n};\nBudgetList.defaultProps = {\n    multipleSelect: true,\n    auto_close: false,\n    selection: true,\n    showonly: false\n}\n\nexport default BudgetList;"]},"metadata":{},"sourceType":"module"}