{"ast":null,"code":"import { AsyncStorage } from \"react-native-web/dist/index\";\nimport { setAuthorizationToken } from \"../util/AuthTokenAxios.util\";\nexport var LOGIN = 'LOGIN';\nexport var LOGOUT = 'LOGOUT';\nexport var USER_PROFILE = 'USER_PROFILE';\nexport var actionLoginUser = function actionLoginUser(user) {\n  return function (dispatch) {\n    dispatch({\n      type: LOGIN,\n      payload: user\n    });\n    AsyncStorage.setItem('jwt_token', user.token);\n    AsyncStorage.setItem('auth_user', JSON.stringify(user));\n    setAuthorizationToken(user.token);\n  };\n};\nexport var actionLogoutUser = function actionLogoutUser() {\n  return function (dispatch) {\n    dispatch({\n      type: LOGOUT\n    });\n    AsyncStorage.removeItem('jwt_token');\n    AsyncStorage.removeItem('auth_user');\n  };\n};\nexport var checkToken = function checkToken(value) {\n  var captureData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  console.log('checkToken data', value);\n  return function (dispatch) {\n    if (value) {\n      var tempParsed = JSON.parse(value);\n      setAuthorizationToken(tempParsed.token);\n      dispatch({\n        type: LOGIN,\n        payload: tempParsed\n      });\n    } else {\n      AsyncStorage.removeItem('jwt_token');\n      AsyncStorage.removeItem('auth_user');\n      setAuthorizationToken();\n      dispatch({\n        type: LOGOUT\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/actions/Auth.action.js"],"names":["AsyncStorage","setAuthorizationToken","LOGIN","LOGOUT","USER_PROFILE","actionLoginUser","user","dispatch","type","payload","setItem","token","JSON","stringify","actionLogoutUser","removeItem","checkToken","value","captureData","console","log","tempParsed","parse"],"mappings":"SAISA,Y;AAGT,SAASC,qBAAT;AAEA,OAAO,IAAMC,KAAK,GAAG,OAAd;AACP,OAAO,IAAMC,MAAM,GAAG,QAAf;AACP,OAAO,IAAMC,YAAY,GAAI,cAAtB;AAEP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AACrC,SAAO,UAACC,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,KAAR;AAAeO,MAAAA,OAAO,EAAEH;AAAxB,KAAD,CAAR;AACAN,IAAAA,YAAY,CAACU,OAAb,CAAqB,WAArB,EAAkCJ,IAAI,CAACK,KAAvC;AACAX,IAAAA,YAAY,CAACU,OAAb,CAAqB,WAArB,EAAkCE,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAlC;AACAL,IAAAA,qBAAqB,CAACK,IAAI,CAACK,KAAN,CAArB;AAQH,GAZD;AAaH,CAdM;AAgBP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAClC,SAAO,UAACP,QAAD,EAAc;AAEjBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR;AACAH,IAAAA,YAAY,CAACe,UAAb,CAAwB,WAAxB;AACAf,IAAAA,YAAY,CAACe,UAAb,CAAwB,WAAxB;AAuBH,GA3BD;AA4BH,CA7BM;AA+BP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAA+B;AAAA,MAAvBC,WAAuB,uEAAT,IAAS;AACrDC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,KAA/B;AACA,SAAO,UAACV,QAAD,EAAc;AACjB,QAAGU,KAAH,EAAU;AACN,UAAMI,UAAU,GAAGT,IAAI,CAACU,KAAL,CAAWL,KAAX,CAAnB;AACAhB,MAAAA,qBAAqB,CAACoB,UAAU,CAACV,KAAZ,CAArB;AACAJ,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEN,KAAR;AAAeO,QAAAA,OAAO,EAAEY;AAAxB,OAAD,CAAR;AACH,KAJD,MAIO;AACHrB,MAAAA,YAAY,CAACe,UAAb,CAAwB,WAAxB;AACAf,MAAAA,YAAY,CAACe,UAAb,CAAwB,WAAxB;AACAd,MAAAA,qBAAqB;AACrBM,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEL;AAAR,OAAD,CAAR;AACH;AACJ,GAXD;AAYH,CAdM","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 03/04/18.\n */\n\nimport { AsyncStorage } from 'react-native';\n// import DeviceInfo from 'react-native-device-info';\n// import { serviceLogout } from '../services/Auth.service';\nimport { setAuthorizationToken } from '../util/AuthTokenAxios.util';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const USER_PROFILE  = 'USER_PROFILE';\n\nexport const actionLoginUser = (user) => {\n    return (dispatch) => {\n        dispatch({ type: LOGIN, payload: user });\n        AsyncStorage.setItem('jwt_token', user.token);\n        AsyncStorage.setItem('auth_user', JSON.stringify(user));\n        setAuthorizationToken(user.token);\n        // if(geolocation_data) {\n        //     if('lat' in geolocation_data && 'lng' in geolocation_data) {\n        //         dispatch(actionGetHomeData());\n        //         dispatch(actionUpdateLocation(geolocation_data));\n        //         dispatch(actionGetNearbyList({latitude: geolocation_data.lat, longitude: geolocation_data.lng}));\n        //     }\n        // }\n    };\n};\n\nexport const actionLogoutUser = () => {\n    return (dispatch) => {\n        // serviceLogout({ device_id: DeviceInfo.getUniqueID() }).then(() => { }).catch((err) => {})\n        dispatch({ type: LOGOUT });\n        AsyncStorage.removeItem('jwt_token');\n        AsyncStorage.removeItem('auth_user');\n        // setAuthorizationToken(null);\n        //     const resetNavigator = StackActions.reset({\n        //         index: 0,\n        //         key: null,\n        //         actions: [\n        //             NavigationActions.navigate({\n        //                 routeName: 'Authorized',\n        //             })\n        //         ],\n        //     });\n        //     dispatch(resetNavigator);\n        //\n        // const resetNavigator2 = StackActions.reset({\n        //     index: 0,\n        //     key: null,\n        //     actions: [\n        //         NavigationActions.navigate({\n        //             routeName: 'Authorized',\n        //         })\n        //     ],\n        // });\n        // dispatch(resetNavigator2);\n    };\n};\n\nexport const checkToken = (value, captureData = null) => {\n    console.log('checkToken data', value);\n    return (dispatch) => {\n        if(value) {\n            const tempParsed = JSON.parse(value);\n            setAuthorizationToken(tempParsed.token);\n            dispatch({ type: LOGIN, payload: tempParsed });\n        } else {\n            AsyncStorage.removeItem('jwt_token');\n            AsyncStorage.removeItem('auth_user');\n            setAuthorizationToken();\n            dispatch({ type: LOGOUT });\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}