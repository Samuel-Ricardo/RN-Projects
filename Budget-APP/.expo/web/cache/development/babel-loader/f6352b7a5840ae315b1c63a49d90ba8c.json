{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/Edit.screen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ListView } from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport KeyboardManager from 'react-native-keyboard-manager';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionSetBudgetCategories, actionSetTotalAmount } from \"../actions/Budget.action\";\nimport fixStyles, { colors } from \"../styles/index.style\";\nimport { getHeightByPerc, getWidthByPerc } from \"../styles/StyleUtils.style\";\nimport BudgetListComponent from \"../components/BudgetList.component\";\nimport { serviceUpdateBudget } from \"../services/Home.service\";\nimport KeyboardShift from \"../components/keyboard.component\";\n\nvar Edit = function (_React$PureComponent) {\n  _inherits(Edit, _React$PureComponent);\n\n  var _super = _createSuper(Edit);\n\n  function Edit(props) {\n    var _this;\n\n    _classCallCheck(this, Edit);\n\n    _this = _super.call(this, props);\n    var ds = new ListView.DataSource({\n      rowHasChanged: function rowHasChanged(r1, r2) {\n        return r1 != r2;\n      }\n    });\n    _this.state = {\n      dataSource: ds.cloneWithRows([]),\n      budget_data: [],\n      spendable_index: 0,\n      spendable_percentage: 0,\n      spendable_amount: 0,\n      max_percentage: 0,\n      max_amount: 0,\n      is_working: false,\n      interactionsComplete: false\n    };\n    _this._handleNextButton = _this._handleNextButton.bind(_assertThisInitialized(_this));\n    _this._addExpense = _this._addExpense.bind(_assertThisInitialized(_this));\n    _this._handleLockPress = _this._handleLockPress.bind(_assertThisInitialized(_this));\n    _this._handleTextChange = _this._handleTextChange.bind(_assertThisInitialized(_this));\n    _this._handleTotalAmountChange = _this._handleTotalAmountChange.bind(_assertThisInitialized(_this));\n    _this._handleUpdateBudget = _this._handleUpdateBudget.bind(_assertThisInitialized(_this));\n    _this._handleBackButton = _this._handleBackButton.bind(_assertThisInitialized(_this));\n    _this._handleResetButton = _this._handleResetButton.bind(_assertThisInitialized(_this));\n    _this._handleShowNotification = _this._handleShowNotification.bind(_assertThisInitialized(_this));\n    _this._callNotificationMethod = _.debounce(_this._handleShowNotification, 500);\n    return _this;\n  }\n\n  _createClass(Edit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (Platform.OS == 'ios') {\n        KeyboardManager.setEnable(true);\n        KeyboardManager.setEnableAutoToolbar(true);\n      }\n\n      InteractionManager.runAfterInteractions(function () {\n        var tempSpendIndex = 0;\n\n        _this2.props.budget_categories.some(function (val) {\n          console.log('edit component - ', val);\n\n          if (val.title.toLowerCase() == 'spendable') {\n            _this2.setState({\n              spendable_percentage: val.percentage,\n              spendable_amount: val.amount,\n              max_percentage: val.percentage,\n              max_amount: val.amount\n            });\n\n            return true;\n          }\n\n          tempSpendIndex++;\n        });\n\n        var tempData = _this2.props.budget_categories;\n\n        if (tempData.length >= tempSpendIndex) {\n          tempData[tempSpendIndex].is_locked = true;\n        }\n\n        _this2.setState({\n          budget_data: tempData,\n          spendable_index: tempSpendIndex,\n          interactionsComplete: true\n        }, function () {\n          _this2.setState({\n            dataSource: _this2.state.dataSource.cloneWithRows(_this2.state.budget_data)\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_handleNextButton\",\n    value: function _handleNextButton() {\n      this.props.navigator.resetTo({\n        screen: 'survey.Home',\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"_handleBackButton\",\n    value: function _handleBackButton() {\n      this.props.navigator.pop({\n        animated: true,\n        animationType: 'slide-horizontal'\n      });\n    }\n  }, {\n    key: \"_handleUpdateBudget\",\n    value: function _handleUpdateBudget() {\n      var _this3 = this;\n\n      console.log(this.state.budget_data);\n      this.setState({\n        is_working: true\n      });\n      serviceUpdateBudget({\n        budget: this.state.budget_data,\n        total_amount: this.props.budget_total\n      }).then(function (data) {\n        _this3.setState({\n          is_working: false\n        });\n\n        if (!data.error) {\n          _this3.props.actionSetTotalAmount(data.data.total_amount);\n\n          _this3.props.actionSetBudgetCategories(data.data.budget);\n\n          _this3.props.navigator.resetTo({\n            screen: 'survey.Result',\n            navigatorStyle: {\n              navBarHidden: true\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_handleShowNotification\",\n    value: function _handleShowNotification(text) {\n      this.props.navigator.showInAppNotification({\n        screen: 'survey.Notification',\n        passProps: {\n          text: text\n        },\n        autoDismissTimerSec: 1\n      });\n    }\n  }, {\n    key: \"_handleTotalAmountChange\",\n    value: function _handleTotalAmountChange(tempText) {\n      var reg = new RegExp(/^\\d+$/);\n\n      if (reg.test(tempText) || tempText == '') {\n        var text = tempText ? tempText : 0;\n        this.props.actionSetTotalAmount(parseInt(text));\n        var tempTotalAmount = parseInt(text);\n        var tempData = this.state.budget_data.map(function (val, key) {\n          var tempPercentage = parseInt(val.percentage);\n          var tempAmount = (tempTotalAmount * tempPercentage / 100).toFixed(2);\n          return _objectSpread(_objectSpread({}, val), {}, {\n            amount: tempAmount\n          });\n        });\n        var temp = tempData[this.state.spendable_index];\n        this.setState({\n          budget_data: tempData,\n          dataSource: this.state.dataSource.cloneWithRows(tempData),\n          max_amount: temp.amount,\n          max_percentage: temp.percentage\n        });\n      }\n    }\n  }, {\n    key: \"_handleResetButton\",\n    value: function _handleResetButton() {\n      this.props.navigator.resetTo({\n        screen: 'survey.Home',\n        navigatorStyle: {\n          navBarHidden: true\n        }\n      });\n    }\n  }, {\n    key: \"_addExpense\",\n    value: function _addExpense() {\n      var tempObj = {\n        id: Date.now(),\n        percentage: 0,\n        is_locked: false,\n        title: '',\n        amount: 0,\n        is_new: true\n      };\n      var temp = this.state.budget_data;\n      temp.push(tempObj);\n      this.setState({\n        budget_data: temp,\n        dataSource: this.state.dataSource.cloneWithRows(temp)\n      });\n    }\n  }, {\n    key: \"_handleTextChange\",\n    value: function _handleTextChange(type, tempText, rowId) {\n      console.log('Edit Screen text input change');\n      console.log(type, tempText, rowId);\n      var tempTotal = this.props.budget_total;\n\n      if (type && rowId) {\n        var text = tempText ? tempText : 0;\n        var tempDiff = {\n          percentage: 0,\n          amount: 0\n        };\n        var tempData = this.state.budget_data.map(function (val, key) {\n          if (key == rowId) {\n            if (type == 'percentage') {\n              var tempPerc = parseInt(text);\n              tempDiff.percentage = tempPerc - val.percentage;\n\n              var _tempAmount = (tempTotal * tempPerc / 100).toFixed(2);\n\n              console.log('tempAmount', _tempAmount);\n              tempDiff.amount = _tempAmount - val.amount;\n              return _objectSpread(_objectSpread({}, val), {}, {\n                percentage: parseInt(text),\n                amount: _tempAmount\n              });\n            } else if (type == 'title') {\n              return _objectSpread(_objectSpread({}, val), {}, {\n                title: text\n              });\n            } else if (type == 'amount') {\n              var _tempAmount2 = parseInt(text);\n\n              tempDiff.amount = (_tempAmount2 - val.amount).toFixed(2);\n              var tempPercetage = (_tempAmount2 * 100 / tempTotal).toFixed(2);\n              tempDiff.percentage = tempPercetage - val.percentage;\n              return _objectSpread(_objectSpread({}, val), {}, {\n                amount: parseInt(text),\n                percentage: tempPercetage\n              });\n            }\n          }\n\n          return val;\n        });\n        var temp = tempData[this.state.spendable_index];\n        var tempPercentage = temp.percentage - tempDiff.percentage;\n        var tempAmount = (temp.amount - tempDiff.amount).toFixed(2);\n        tempData[this.state.spendable_index] = _objectSpread(_objectSpread({}, temp), {}, {\n          percentage: tempPercentage,\n          amount: tempAmount\n        });\n        this.setState({\n          budget_data: tempData,\n          dataSource: this.state.dataSource.cloneWithRows(tempData),\n          max_amount: tempAmount,\n          max_percentage: tempPercentage\n        });\n      }\n    }\n  }, {\n    key: \"_handleLockPress\",\n    value: function _handleLockPress(rowId) {\n      var _this4 = this;\n\n      var tempData = this.state.budget_data.map(function (val, key) {\n        if (key == rowId && rowId != _this4.state.spendable_index) {\n          return _objectSpread(_objectSpread({}, val), {}, {\n            is_locked: !val.is_locked\n          });\n        }\n\n        return val;\n      });\n      this.setState({\n        budget_data: tempData,\n        dataSource: this.state.dataSource.cloneWithRows(tempData)\n      });\n    }\n  }, {\n    key: \"_renderUpdateButtonContent\",\n    value: function _renderUpdateButtonContent() {\n      if (!this.state.is_working) {\n        return React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.buttonStyle, {\n            fontWeight: 'bold',\n            color: colors.white\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }\n        }, \"UPDATE BUDGET\");\n      } else {\n        return React.createElement(ActivityIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_renderContent\",\n    value: function _renderContent() {\n      if (this.state.interactionsComplete) {\n        return React.createElement(KeyboardShift, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: styles.mainContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: [styles.flexRow, {\n            alignItems: 'center'\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: this._handleBackButton,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }\n        }, React.createElement(Image, {\n          source: require(\"../resources/ic_back.png\"),\n          style: {\n            width: 20,\n            height: 15,\n            marginRight: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }\n        })), React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.whiteColor, {\n            fontSize: 14\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }\n        }, \"Adjust Budget\")), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: this._handleResetButton,\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, {\n            color: colors.white,\n            fontSize: 14,\n            marginLeft: 5\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }\n        }, \"Reset\")))), React.createElement(View, {\n          style: {\n            height: 110,\n            marginVertical: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: [{\n            flex: 1,\n            alignItems: 'center'\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.whiteColor, {\n            fontSize: 36\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }\n        }, \"$\"), React.createElement(TextInput, {\n          style: styles.budgetInput,\n          value: \"\" + this.props.budget_total,\n          onChangeText: this._handleTotalAmountChange,\n          keyboardType: \"numeric\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 33\n          }\n        }))), React.createElement(View, {\n          style: {\n            flex: 1,\n            marginTop: 5,\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.whiteColor, {\n            fontSize: 14,\n            fontWeight: 'bold'\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 29\n          }\n        }, \"In total\"))), React.createElement(View, {\n          style: {\n            marginTop: 10,\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: [styles.borderStyle, {\n            flex: 1,\n            backgroundColor: colors.white,\n            paddingVertical: 10,\n            paddingHorizontal: 10\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }\n        }, React.createElement(BudgetListComponent, {\n          dataSource: this.state.dataSource,\n          budget_data: this.state.budget_data,\n          selectedCategories: this.state.selectedCategories,\n          multipleSelect: true,\n          handleLock: this._handleLockPress,\n          saveCategorySelection: function saveCategorySelection() {},\n          handleTextChange: this._handleTextChange,\n          total_amount: this.props.budget_total,\n          max_amount: this.state.max_amount,\n          max_percentage: this.state.max_percentage,\n          callNotificationMethod: this._callNotificationMethod,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }\n        }), React.createElement(View, {\n          style: {\n            backgroundColor: colors.backgroundGray,\n            height: 2,\n            marginTop: 5\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 33\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: [{\n            backgroundColor: 'transparent',\n            marginTop: 10\n          }],\n          onPress: this._addExpense,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 33\n          }\n        }, React.createElement(Text, {\n          style: [fixStyles.fontContainer, styles.buttonStyle, {\n            color: colors.backgroundBlue,\n            fontWeight: 'bold'\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 37\n          }\n        }, \"+ ADD MORE EXPENSE\")))), React.createElement(View, {\n          style: {\n            marginVertical: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: [styles.nextButton, styles.borderStyle, {\n            backgroundColor: colors.backgroundBlue\n          }],\n          onPress: this._handleUpdateBudget,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }\n        }, this._renderUpdateButtonContent()))));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 21\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 93\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          position: 'absolute',\n          zIndex: -1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          width: getWidthByPerc(100),\n          height: getHeightByPerc(45),\n          backgroundColor: colors.backgroundBlue\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: {\n          width: getWidthByPerc(100),\n          height: getHeightByPerc(55),\n          backgroundColor: colors.backgroundGray\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }\n      })), this._renderContent());\n    }\n  }]);\n\n  return Edit;\n}(React.PureComponent);\n\nEdit.navigatorStyle = {\n  statusBarColor: 'transparent',\n  statusBarTextColorScheme: 'light',\n  navBarHidden: true,\n  drawUnderStatusBar: true\n};\nvar styles = StyleSheet.create({\n  borderStyle: {\n    borderRadius: 6,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      height: 1\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 2\n  },\n  mainContainer: {\n    flex: 1,\n    paddingHorizontal: 20,\n    paddingTop: 40,\n    width: getWidthByPerc(100),\n    height: getHeightByPerc(100)\n  },\n  whiteColor: {\n    color: colors.white\n  },\n  flexRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  listText: {\n    color: colors.black\n  },\n  paddingVertical: {\n    paddingVertical: 5\n  },\n  nextButton: {\n    paddingVertical: 10,\n    backgroundColor: colors.white,\n    width: getWidthByPerc(100, 40)\n  },\n  buttonStyle: {\n    textAlign: 'center',\n    fontSize: 14,\n    color: colors.black\n  },\n  budgetInput: {\n    minWidth: 80,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.white,\n    padding: 0,\n    fontSize: 36,\n    color: colors.white,\n    marginLeft: 2,\n    height: 36,\n    marginTop: 7\n  }\n});\n\nfunction mapStateToProps(state) {\n  return {\n    budget_total: state.budget.total_amount,\n    budget_categories: state.budget.categories\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    actionSetBudgetCategories: actionSetBudgetCategories,\n    actionSetTotalAmount: actionSetTotalAmount\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/screens/Edit.screen.js"],"names":["React","ListView","PropTypes","_","KeyboardAwareScrollView","KeyboardManager","connect","bindActionCreators","actionSetBudgetCategories","actionSetTotalAmount","fixStyles","colors","getHeightByPerc","getWidthByPerc","BudgetListComponent","serviceUpdateBudget","KeyboardShift","Edit","props","ds","DataSource","rowHasChanged","r1","r2","state","dataSource","cloneWithRows","budget_data","spendable_index","spendable_percentage","spendable_amount","max_percentage","max_amount","is_working","interactionsComplete","_handleNextButton","bind","_addExpense","_handleLockPress","_handleTextChange","_handleTotalAmountChange","_handleUpdateBudget","_handleBackButton","_handleResetButton","_handleShowNotification","_callNotificationMethod","debounce","Platform","OS","setEnable","setEnableAutoToolbar","InteractionManager","runAfterInteractions","tempSpendIndex","budget_categories","some","val","console","log","title","toLowerCase","setState","percentage","amount","tempData","length","is_locked","navigator","resetTo","screen","navigatorStyle","navBarHidden","pop","animated","animationType","budget","total_amount","budget_total","then","data","error","text","showInAppNotification","passProps","autoDismissTimerSec","tempText","reg","RegExp","test","parseInt","tempTotalAmount","map","key","tempPercentage","tempAmount","toFixed","temp","tempObj","id","Date","now","is_new","push","type","rowId","tempTotal","tempDiff","tempPerc","tempPercetage","fontContainer","styles","buttonStyle","fontWeight","color","white","flex","mainContainer","flexRow","alignItems","flexDirection","require","width","height","marginRight","whiteColor","fontSize","marginLeft","marginVertical","justifyContent","budgetInput","marginTop","borderStyle","backgroundColor","paddingVertical","paddingHorizontal","selectedCategories","backgroundGray","backgroundBlue","nextButton","_renderUpdateButtonContent","position","zIndex","_renderContent","PureComponent","statusBarColor","statusBarTextColorScheme","drawUnderStatusBar","StyleSheet","create","borderRadius","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","paddingTop","listText","black","textAlign","minWidth","borderBottomWidth","borderBottomColor","padding","mapStateToProps","categories","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 28/09/18.\n */\nimport React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, TextInput, ImageBackground, Image, ListView, Platform, ActivityIndicator, InteractionManager } from 'react-native';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport KeyboardManager from 'react-native-keyboard-manager';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actionSetBudgetCategories, actionSetTotalAmount } from '../actions/Budget.action';\nimport fixStyles, { colors } from '../styles/index.style';\nimport { getHeightByPerc, getWidthByPerc } from '../styles/StyleUtils.style';\nimport BudgetListComponent from '../components/BudgetList.component';\nimport { serviceUpdateBudget } from '../services/Home.service';\nimport KeyboardShift from '../components/keyboard.component';\n\n\n\nclass Edit extends React.PureComponent {\n    static navigatorStyle = {\n        statusBarColor: 'transparent',\n        statusBarTextColorScheme: 'light',\n        navBarHidden: true,\n        drawUnderStatusBar: true\n    };\n\n    constructor(props) {\n        super(props);\n        const ds = new ListView.DataSource({ rowHasChanged: (r1, r2) => r1 != r2});\n        this.state = {\n            dataSource: ds.cloneWithRows([]),\n            budget_data: [],\n            spendable_index: 0,\n            spendable_percentage: 0,\n            spendable_amount: 0,\n            max_percentage: 0,\n            max_amount: 0,\n            is_working: false,\n            interactionsComplete: false,\n        };\n        this._handleNextButton = this._handleNextButton.bind(this);\n        this._addExpense = this._addExpense.bind(this);\n        this._handleLockPress = this._handleLockPress.bind(this);\n        this._handleTextChange = this._handleTextChange.bind(this);\n        this._handleTotalAmountChange = this._handleTotalAmountChange.bind(this);\n        this._handleUpdateBudget = this._handleUpdateBudget.bind(this);\n        this._handleBackButton = this._handleBackButton.bind(this);\n        this._handleResetButton = this._handleResetButton.bind(this);\n        this._handleShowNotification = this._handleShowNotification.bind(this);\n        this._callNotificationMethod = _.debounce(this._handleShowNotification, 500);\n\n    }\n\n    componentDidMount() {\n        if(Platform.OS == 'ios') {\n            KeyboardManager.setEnable(true);\n            KeyboardManager.setEnableAutoToolbar(true);\n        }\n\n        InteractionManager.runAfterInteractions(() => {\n            let tempSpendIndex = 0;\n            this.props.budget_categories.some((val) => {\n                console.log('edit component - ',val);\n                if (val.title.toLowerCase() == 'spendable') {\n                    this.setState({ spendable_percentage: val.percentage,\n                        spendable_amount: val.amount,\n                        max_percentage: val.percentage,\n                        max_amount: val.amount,\n                    });\n                    return true;\n                }\n                tempSpendIndex++;\n            });\n            //change spendable to locked\n            const tempData = this.props.budget_categories;\n            if(tempData.length >= tempSpendIndex) {\n                tempData[tempSpendIndex].is_locked = true\n            }\n            this.setState({ budget_data: tempData, spendable_index: tempSpendIndex, interactionsComplete: true }, () => {\n                this.setState({ dataSource: this.state.dataSource.cloneWithRows(this.state.budget_data) });\n            });\n        });\n    }\n\n\n    _handleNextButton() {\n        this.props.navigator.resetTo({\n            screen: 'survey.Home',\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n    _handleBackButton() {\n        this.props.navigator.pop({\n            animated: true,\n            animationType: 'slide-horizontal',\n        });\n    }\n    _handleUpdateBudget() {\n        console.log(this.state.budget_data);\n        this.setState({ is_working: true });\n        serviceUpdateBudget({budget: this.state.budget_data, total_amount: this.props.budget_total }).then((data) => {\n            this.setState({ is_working: false });\n            if (!data.error) {\n                this.props.actionSetTotalAmount(data.data.total_amount);\n\n                this.props.actionSetBudgetCategories(data.data.budget);\n                this.props.navigator.resetTo({\n                    screen: 'survey.Result',\n                    navigatorStyle: {\n                        navBarHidden: true\n                    }\n                });\n            }\n        });\n    }\n    _handleShowNotification(text) {\n        this.props.navigator.showInAppNotification({\n            screen: 'survey.Notification',\n            passProps: { text: text },\n            autoDismissTimerSec: 1,\n        })\n    }\n\n    _handleTotalAmountChange(tempText) {\n        var reg = new RegExp(/^\\d+$/)\n        if(reg.test(tempText) || tempText == '' ) {\n            const text = tempText ? tempText : 0;\n            this.props.actionSetTotalAmount(parseInt(text));\n            const tempTotalAmount = parseInt(text);\n            const tempData = this.state.budget_data.map((val, key) => {\n                const tempPercentage = parseInt(val.percentage);\n                const tempAmount = ((tempTotalAmount * tempPercentage / ( 100))).toFixed(2);\n                return {...val, amount: tempAmount};\n            });\n            const temp = tempData[this.state.spendable_index];\n            this.setState({budget_data: tempData,\n                dataSource: this.state.dataSource.cloneWithRows(tempData),\n                max_amount: temp.amount,\n                max_percentage: temp.percentage,\n            });\n        }\n    }\n    _handleResetButton () {\n        this.props.navigator.resetTo({\n            screen: 'survey.Home',\n            navigatorStyle: {\n                navBarHidden: true\n            }\n        });\n    }\n    _addExpense() {\n        const tempObj =  {\n            id: Date.now(),\n            percentage: 0,\n            is_locked: false,\n            title: '',\n            amount: 0,\n            is_new: true,\n        };\n        const temp = this.state.budget_data;\n        temp.push(tempObj);\n        this.setState({ budget_data: temp, dataSource: this.state.dataSource.cloneWithRows(temp) });\n    }\n    _handleTextChange(type, tempText, rowId) {\n        console.log('Edit Screen text input change');\n        console.log(type, tempText, rowId);\n        const tempTotal = this.props.budget_total;\n        if(type && rowId) {\n            const text = tempText ? tempText : 0;\n            let tempDiff = {percentage: 0, amount: 0};\n            const tempData = this.state.budget_data.map((val, key) => {\n                if (key == rowId) {\n                    if (type == 'percentage') {\n                        const tempPerc = parseInt(text);\n                        tempDiff.percentage = tempPerc - val.percentage ;\n\n                        const tempAmount = ((tempTotal * tempPerc / ( 100))).toFixed(2);\n                        console.log('tempAmount', tempAmount);\n                        tempDiff.amount = tempAmount - val.amount;\n\n                        return {...val, percentage: parseInt(text), amount: tempAmount };\n                    } else if (type == 'title') {\n                        return {...val, title: text};\n                    } else if (type == 'amount') {\n                        const tempAmount = parseInt(text)\n                        tempDiff.amount = (tempAmount - val.amount).toFixed(2) ;\n\n                        const tempPercetage = ((tempAmount * 100 / tempTotal)).toFixed(2);\n                        tempDiff.percentage = tempPercetage - val.percentage;\n\n                        return {...val, amount: parseInt(text), percentage: tempPercetage};\n                    }\n                }\n                return val;\n            });\n            const temp = tempData[this.state.spendable_index];\n            const tempPercentage = temp.percentage - (tempDiff.percentage);\n            const tempAmount = (temp.amount - (tempDiff.amount)).toFixed(2);\n            tempData[this.state.spendable_index] = {\n                ...temp,\n                percentage: tempPercentage,\n                amount: tempAmount,\n            };\n            this.setState({budget_data: tempData,\n                dataSource: this.state.dataSource.cloneWithRows(tempData),\n                max_amount: tempAmount,\n                max_percentage: tempPercentage,\n\n            })\n        }\n    }\n\n    _handleLockPress(rowId) {\n        const tempData = this.state.budget_data.map((val, key) => {\n            if(key == rowId && rowId != this.state.spendable_index) {\n                return { ...val, is_locked: !val.is_locked };\n            } return val;\n        });\n        this.setState({ budget_data: tempData, dataSource: this.state.dataSource.cloneWithRows(tempData) });\n    }\n    _renderUpdateButtonContent() {\n        if(!this.state.is_working) {\n            return (<Text style={[fixStyles.fontContainer, styles.buttonStyle, { fontWeight: 'bold', color: colors.white}  ]}>UPDATE BUDGET</Text>)\n        } else {\n            return (<ActivityIndicator />)\n        }\n    }\n    _renderContent() {\n        if(this.state.interactionsComplete) {\n            return (    <KeyboardShift style={{flex: 1}}>\n                <View style={styles.mainContainer}>\n                    <View style={[styles.flexRow, { alignItems: 'center'}]}>\n                        <View style={{flexDirection: 'row'}}>\n                            <TouchableOpacity onPress={this._handleBackButton}>\n                                <Image source={require('../resources/ic_back.png')}\n                                       style={{width: 20, height: 15, marginRight: 10}}/>\n                            </TouchableOpacity>\n                            <Text style={[fixStyles.fontContainer, styles.whiteColor, {fontSize: 14}]}>\n                                Adjust Budget\n                            </Text>\n                        </View>\n                        <View>\n                            <TouchableOpacity onPress={this._handleResetButton}\n                                              style={{flexDirection: 'row', alignItems: 'center'}}>\n                                <Text style={[fixStyles.fontContainer, {\n                                    color: colors.white,\n                                    fontSize: 14,\n                                    marginLeft: 5\n                                }]}>\n                                    Reset\n                                </Text>\n                            </TouchableOpacity>\n                        </View>\n                    </View>\n                    <View style={{height: 110, marginVertical: 10}}>\n                        <View style={[ {flex: 1, alignItems: 'center' }]}>\n                            <View style={{flexDirection: 'row', flex: 1, alignItems: 'center', justifyContent: 'center'}}>\n                                <Text style={[fixStyles.fontContainer, styles.whiteColor, {fontSize: 36}]}>\n                                    $\n                                </Text>\n                                <TextInput style={styles.budgetInput} value={`${this.props.budget_total}`}\n                                           onChangeText={this._handleTotalAmountChange} keyboardType=\"numeric\"/>\n                            </View>\n\n                        </View>\n                        <View style={{flex: 1, marginTop: 5, alignItems: 'center' }}>\n                            <Text style={[fixStyles.fontContainer, styles.whiteColor, { fontSize: 14, fontWeight: 'bold' }]}>\n                                In total\n                            </Text>\n                        </View>\n                    </View>\n                    <View style={{marginTop: 10, flex: 1}}>\n                        <View style={[styles.borderStyle, {\n                            flex: 1,\n                            backgroundColor: colors.white,\n                            paddingVertical: 10,\n                            paddingHorizontal: 10\n                        }]}>\n                            <BudgetListComponent\n                                dataSource={this.state.dataSource}\n                                budget_data={this.state.budget_data}\n                                selectedCategories={this.state.selectedCategories}\n                                multipleSelect\n                                handleLock={this._handleLockPress}\n                                saveCategorySelection={() => {\n                                }}\n                                handleTextChange={this._handleTextChange}\n                                total_amount={this.props.budget_total}\n                                max_amount={this.state.max_amount}\n                                max_percentage={this.state.max_percentage}\n                                callNotificationMethod={this._callNotificationMethod}\n                            />\n                                <View style={{backgroundColor: colors.backgroundGray, height: 2, marginTop: 5}}/>\n                                <TouchableOpacity style={[{backgroundColor: 'transparent', marginTop: 10}]}\n                                                  onPress={this._addExpense}>\n                                    <Text style={[fixStyles.fontContainer,\n                                        styles.buttonStyle,\n                                        {color: colors.backgroundBlue, fontWeight: 'bold'}]}\n                                    >\n                                        + ADD MORE EXPENSE\n                                    </Text>\n                                </TouchableOpacity>\n                        </View>\n                    </View>\n                    <View style={{marginVertical: 10}}>\n                        <TouchableOpacity style={[styles.nextButton, styles.borderStyle, { backgroundColor: colors.backgroundBlue}]}\n                                          onPress={this._handleUpdateBudget}>\n                            {this._renderUpdateButtonContent()}\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            </KeyboardShift>);\n        } else {\n            return (<View style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}><ActivityIndicator size=\"large\"/></View>)\n        }\n    }\n    render() {\n\n        return (\n            <View style={{flex: 1}}>\n                <View style={{ flex: 1, position: 'absolute', zIndex: -1 }}>\n                    <View style={{width: getWidthByPerc(100), height: getHeightByPerc(45), backgroundColor: colors.backgroundBlue}}/>\n                    <View style={{width: getWidthByPerc(100), height: getHeightByPerc(55), backgroundColor: colors.backgroundGray}}/></View>\n                {this._renderContent()}\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    borderStyle: {\n        // borderWidth: 1,\n        // borderColor: colors.black,\n        borderRadius: 6,\n        elevation: 3,\n        shadowColor: '#000',\n        shadowOffset: {  height: 1 },\n        shadowOpacity: 0.5,\n        shadowRadius: 2,\n        // overflow: 'hidden',\n        // marginHorizontal: 5\n    },\n    mainContainer: {\n        flex: 1,\n        paddingHorizontal: 20,\n        paddingTop: 40,\n        width: getWidthByPerc(100),\n        height: getHeightByPerc(100),\n    },\n    whiteColor: {\n        color: colors.white,\n    },\n    flexRow: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    listText: {\n        color: colors.black\n    },\n    paddingVertical: {\n        paddingVertical: 5\n    },\n    nextButton: {\n        paddingVertical:10,\n        backgroundColor: colors.white,\n        width: getWidthByPerc(100, 40),\n    },\n    buttonStyle: {\n        textAlign: 'center',\n        fontSize: 14,\n        color: colors.black,\n    },\n    budgetInput: {\n        minWidth: 80,\n        borderBottomWidth: 1,\n        borderBottomColor: colors.white,\n        padding: 0,\n        fontSize: 36,\n        color: colors.white,\n        marginLeft: 2,\n        // textAlign: 'center',\n        height:36,\n        marginTop: 7\n    }\n});\nfunction mapStateToProps(state) {\n    return {\n        budget_total: state.budget.total_amount,\n        budget_categories: state.budget.categories\n    }\n}\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        actionSetBudgetCategories: actionSetBudgetCategories,\n        actionSetTotalAmount: actionSetTotalAmount\n    }, dispatch);\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);"]},"metadata":{},"sourceType":"module"}