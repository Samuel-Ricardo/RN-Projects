{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/components/BudgetListItem.component.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport PropTypes from 'prop-types';\nimport StylesObj, { colors } from \"../styles/index.style\";\n\nvar BudgetListItem = function (_React$PureComponent) {\n  _inherits(BudgetListItem, _React$PureComponent);\n\n  var _super = _createSuper(BudgetListItem);\n\n  _createClass(BudgetListItem, [{\n    key: \"isEquivalent\",\n    value: function isEquivalent(a, b) {\n      var aProps = Object.getOwnPropertyNames(a);\n      var bProps = Object.getOwnPropertyNames(b);\n\n      if (aProps.length != bProps.length) {\n        return false;\n      }\n\n      for (var i = 0; i < aProps.length; i++) {\n        var propName = aProps[i];\n\n        if (a[propName] !== b[propName]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }]);\n\n  function BudgetListItem(props) {\n    var _this;\n\n    _classCallCheck(this, BudgetListItem);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      percentage: 0,\n      amount: 0,\n      title: ''\n    };\n    _this._handleAmount = _this._handleAmount.bind(_assertThisInitialized(_this));\n    _this._handlePercentage = _this._handlePercentage.bind(_assertThisInitialized(_this));\n    _this._handleTitle = _this._handleTitle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BudgetListItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props$rowData = this.props.rowData,\n          percentage = _this$props$rowData.percentage,\n          amount = _this$props$rowData.amount,\n          title = _this$props$rowData.title;\n      this.setState({\n        percentage: percentage,\n        amount: amount,\n        title: title\n      });\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState) {\n      if (!this.isEquivalent(nextProps.rowData, this.props.rowData)) {\n        var _nextProps$rowData = nextProps.rowData,\n            percentage = _nextProps$rowData.percentage,\n            amount = _nextProps$rowData.amount,\n            title = _nextProps$rowData.title;\n        this.setState({\n          percentage: percentage,\n          amount: amount,\n          title: title\n        });\n      }\n    }\n  }, {\n    key: \"_returnStringData\",\n    value: function _returnStringData(data) {\n      return data ? parseInt(data).toString() : \"0\";\n    }\n  }, {\n    key: \"_handleAmount\",\n    value: function _handleAmount(text, rowId) {\n      var _this2 = this;\n\n      console.log('amount sum', this.props.max_amount + this.state.amount);\n\n      if (parseFloat(this.props.max_amount) + parseFloat(this.state.amount) >= parseFloat(text ? text : 0)) {\n        this.setState({\n          amount: text ? text : 0\n        }, function () {\n          _this2.props.handleTextChange('amount', text, rowId);\n        });\n      } else {\n        this.props.callNotificationMethod('Amount must be less than or equal to ' + parseInt(this.props.max_amount + this.state.amount));\n      }\n    }\n  }, {\n    key: \"_handlePercentage\",\n    value: function _handlePercentage(text, rowId) {\n      var _this3 = this;\n\n      console.log('percentage change', text);\n      console.log('percentage old', this.state.percentage);\n      console.log('percentage sum', this.props.max_percentage + this.state.percentage);\n\n      if (parseFloat(this.props.max_percentage) + parseFloat(this.state.percentage) >= parseFloat(text ? text : 0)) {\n        console.log('allowed text', text);\n        this.setState({\n          percentage: text ? text : 0\n        }, function () {\n          _this3.props.handleTextChange('percentage', text, rowId);\n        });\n      } else {\n        this.props.callNotificationMethod('Percentage must be less than or equal to ' + parseInt(this.props.max_percentage + this.state.percentage));\n      }\n    }\n  }, {\n    key: \"_handleTitle\",\n    value: function _handleTitle(text, rowId) {\n      var _this4 = this;\n\n      this.setState({\n        title: text\n      }, function () {\n        _this4.props.handleTextChange('title', text, rowId);\n      });\n    }\n  }, {\n    key: \"_renderAmountInput\",\n    value: function _renderAmountInput(rowData, rowId) {\n      var _this5 = this;\n\n      if (!rowData.is_locked) {\n        return React.createElement(TextInput, {\n          keyboardType: 'numeric',\n          style: [styles.amountInput, styles.inputUnderLine],\n          value: this._returnStringData(this.state.amount),\n          onChangeText: function onChangeText(text) {\n            _this5._handleAmount(text, rowId);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }\n        });\n      }\n\n      return React.createElement(Text, {\n        style: [StylesObj.fontContainer, styles.listText, styles.amountInput, {\n          color: colors.backgroundBlue\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, parseInt(this.state.amount));\n    }\n  }, {\n    key: \"_renderPercentageData\",\n    value: function _renderPercentageData(rowData, rowId) {\n      var _this6 = this;\n\n      if (!rowData.is_locked) {\n        return React.createElement(TextInput, {\n          keyboardType: 'numeric',\n          style: [styles.percentageInput, styles.inputUnderLine],\n          value: this._returnStringData(this.state.percentage),\n          onChangeText: function onChangeText(text) {\n            _this6._handlePercentage(text, rowId);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 22\n          }\n        });\n      }\n\n      return React.createElement(Text, {\n        style: [StylesObj.fontContainer, styles.listText, styles.percentageInput, {\n          color: colors.backgroundBlue,\n          paddingVertical: 5,\n          paddingHorizontal: 5\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, parseInt(this.state.percentage));\n    }\n  }, {\n    key: \"_renderTitleData\",\n    value: function _renderTitleData(rowData, rowId) {\n      var _this7 = this;\n\n      if (!rowData.is_locked && rowData.is_new) {\n        return React.createElement(TextInput, {\n          style: [styles.titleInput, styles.inputUnderLine, {\n            color: colors.black\n          }],\n          value: this.state.title,\n          onChangeText: function onChangeText(text) {\n            _this7._handleTitle(text, rowId);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 22\n          }\n        });\n      }\n\n      return React.createElement(Text, {\n        style: [StylesObj.fontContainer, styles.listText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, this.state.title);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var _this$props = this.props,\n          rowData = _this$props.rowData,\n          rowId = _this$props.rowId;\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [styles.flexRow, styles.paddingVertical],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          paddingVertical: 5,\n          paddingHorizontal: 5,\n          paddingRight: 10\n        },\n        onPress: function onPress() {\n          _this8.props.handleLock(rowId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      }, rowData.is_locked ? React.createElement(Image, {\n        style: styles.lockImage,\n        source: require(\"../resources/ic_lock_enable.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 50\n        }\n      }) : React.createElement(Image, {\n        style: styles.lockImage,\n        source: require(\"../resources/ic_lock_diable.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 140\n        }\n      })), this._renderPercentageData(rowData, rowId), React.createElement(Text, {\n        style: {\n          color: colors.backgroundBlue,\n          marginRight: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, \" % \"), this._renderTitleData(rowData, rowId)), React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: [StylesObj.fontContainer, styles.listText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, \"$ \"), this._renderAmountInput(rowData, rowId))), React.createElement(View, {\n        style: {\n          height: 2,\n          flex: 1,\n          backgroundColor: colors.backgroundGray\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return BudgetListItem;\n}(React.PureComponent);\n\nexport { BudgetListItem as default };\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  thumb: {\n    width: 35,\n    height: 35\n  },\n  text: {\n    flex: 1,\n    paddingLeft: 10,\n    fontSize: 18,\n    color: colors.black\n  },\n  flexRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  listText: {\n    color: colors.black\n  },\n  paddingVertical: {\n    paddingVertical: 5\n  },\n  lockImage: {\n    width: 15,\n    height: 20\n  },\n  percentageInput: {\n    minWidth: 20,\n    paddingVertical: 0,\n    textAlign: 'center'\n  },\n  amountInput: {\n    minWidth: 20,\n    paddingVertical: 0,\n    textAlign: 'center'\n  },\n  titleInput: {\n    width: 100,\n    paddingVertical: 0\n  },\n  inputUnderLine: {\n    color: colors.backgroundBlue\n  }\n});","map":{"version":3,"sources":["/home/samuelkeullen/NodeProjects/Simple-Budget-App-master/src/components/BudgetListItem.component.js"],"names":["React","PropTypes","StylesObj","colors","BudgetListItem","a","b","aProps","Object","getOwnPropertyNames","bProps","length","i","propName","props","state","percentage","amount","title","_handleAmount","bind","_handlePercentage","_handleTitle","rowData","setState","nextProps","nextState","isEquivalent","data","parseInt","toString","text","rowId","console","log","max_amount","parseFloat","handleTextChange","callNotificationMethod","max_percentage","is_locked","styles","amountInput","inputUnderLine","_returnStringData","fontContainer","listText","color","backgroundBlue","percentageInput","paddingVertical","paddingHorizontal","is_new","titleInput","black","flexRow","row","paddingRight","handleLock","lockImage","require","_renderPercentageData","marginRight","_renderTitleData","_renderAmountInput","height","flex","backgroundColor","backgroundGray","PureComponent","StyleSheet","create","flexDirection","alignItems","thumb","width","paddingLeft","fontSize","justifyContent","minWidth","textAlign"],"mappings":"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","sourcesContent":["/**\n * Created by charanjeetelectrovese@gmail.com on system AakritiS. on 29/09/18.\n */\nimport React from 'react';\nimport { View, Text, TextInput, StyleSheet, Image, TouchableOpacity, ScrollView, KeyboardAvoidingView } from 'react-native';\nimport PropTypes from 'prop-types';\nimport StylesObj, { colors } from '../styles/index.style';\n\nexport default class BudgetListItem extends React.PureComponent {\n    isEquivalent(a, b) {\n        // Create arrays of property names\n        var aProps = Object.getOwnPropertyNames(a);\n        var bProps = Object.getOwnPropertyNames(b);\n\n        // If number of properties is different,\n        // objects are not equivalent\n        if (aProps.length != bProps.length) {\n            return false;\n        }\n\n        for (var i = 0; i < aProps.length; i++) {\n            var propName = aProps[i];\n\n            // If values of same property are not equal,\n            // objects are not equivalent\n            if (a[propName] !== b[propName]) {\n                return false;\n            }\n        }\n\n        // If we made it this far, objects\n        // are considered equivalent\n        return true;\n    }\n    constructor(props) {\n        super(props);\n        this.state = {\n            percentage: 0,\n            amount: 0,\n            title: '',\n        };\n        this._handleAmount = this._handleAmount.bind(this);\n        this._handlePercentage = this._handlePercentage.bind(this);\n        this._handleTitle = this._handleTitle.bind(this);\n    }\n\n    componentDidMount() {\n        const { percentage, amount, title } = this.props.rowData;\n        this.setState({\n            percentage: percentage,\n            amount: amount,\n            title: title,\n        });\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        if(!this.isEquivalent(nextProps.rowData, this.props.rowData)) {\n            const { percentage, amount, title } = nextProps.rowData;\n            this.setState({\n                percentage: percentage,\n                amount: amount,\n                title: title,\n            });\n        }\n    }\n\n    _returnStringData(data) {\n        return data  ? parseInt(data).toString() : \"0\";\n    }\n    _handleAmount(text, rowId) {\n        console.log('amount sum',this.props.max_amount + this.state.amount);\n        if((parseFloat(this.props.max_amount) + parseFloat(this.state.amount)) >= parseFloat(text ? text : 0)) {\n            this.setState({amount: (text ? text: 0)}, () => {\n                this.props.handleTextChange('amount', text, rowId)\n            });\n        } else {\n            this.props.callNotificationMethod('Amount must be less than or equal to '+ parseInt(this.props.max_amount + this.state.amount))\n        }\n    }\n    _handlePercentage(text, rowId) {\n        console.log('percentage change', text);\n        console.log('percentage old', this.state.percentage);\n        console.log('percentage sum', (this.props.max_percentage + this.state.percentage));\n        if((parseFloat(this.props.max_percentage) + parseFloat(this.state.percentage)) >= parseFloat(text ? text : 0)) {\n            console.log('allowed text', text);\n            // if(parseFloat(text) >= 0) {\n                this.setState({percentage: (text ? text: 0)}, () => {\n                    this.props.handleTextChange('percentage', text, rowId)\n                });\n            // }\n        } else {\n            this.props.callNotificationMethod('Percentage must be less than or equal to '+ parseInt(this.props.max_percentage + this.state.percentage))\n        }\n    }\n    _handleTitle(text, rowId) {\n        this.setState({ title: text }, () => {\n            this.props.handleTextChange('title', text, rowId)\n        });\n    }\n    _renderAmountInput(rowData, rowId) {\n        if(!rowData.is_locked) {\n            return (<TextInput\n                keyboardType={'numeric'}\n                style={[styles.amountInput, styles.inputUnderLine]}\n                value={this._returnStringData(this.state.amount)}\n                onChangeText={(text) => { this._handleAmount(text, rowId)} }\n            />);\n        }\n        return (\n            <Text style={[StylesObj.fontContainer, styles.listText, styles.amountInput, { color: colors.backgroundBlue}]}>{parseInt(this.state.amount)}</Text>\n        )\n    }\n    _renderPercentageData(rowData, rowId) {\n        if(!rowData.is_locked) {\n            return ( <TextInput\n                keyboardType={'numeric'}\n                style={[styles.percentageInput, styles.inputUnderLine]}\n                value={this._returnStringData(this.state.percentage)}\n                onChangeText={(text) => { this._handlePercentage(text, rowId)} }\n            />);\n        }\n        return (\n            <Text style={[StylesObj.fontContainer, styles.listText, styles.percentageInput, { color: colors.backgroundBlue , paddingVertical: 5, paddingHorizontal: 5}]}>{parseInt(this.state.percentage)}</Text>\n        );\n    }\n\n    _renderTitleData(rowData, rowId) {\n        if(!rowData.is_locked && rowData.is_new) {\n            return ( <TextInput\n                style={[styles.titleInput, styles.inputUnderLine, {color: colors.black}]}\n                value={(this.state.title)}\n                onChangeText={(text) => { this._handleTitle(text, rowId)} }\n            />);\n        }\n        return (\n            <Text style={[StylesObj.fontContainer, styles.listText]}>{this.state.title}</Text>\n        );\n    }\n\n    render() {\n        const {rowData, rowId} = this.props;\n        return (\n            <View>\n                <View style={ [styles.flexRow, styles.paddingVertical] }>\n                    <View style={styles.row}>\n                        <TouchableOpacity style={{ paddingVertical: 5, paddingHorizontal:5, paddingRight: 10 }} onPress={() => {\n                            this.props.handleLock(rowId);\n                            // highlightRow(sectionId, rowId);\n                        }}\n                        >\n                            {rowData.is_locked ? <Image style={styles.lockImage}  source={require('../resources/ic_lock_enable.png')} /> : <Image style={styles.lockImage} source={require('../resources/ic_lock_diable.png')} />}\n                        </TouchableOpacity>\n                        {this._renderPercentageData(rowData, rowId)}\n                        <Text style={{ color: colors.backgroundBlue, marginRight: 5 }}> % </Text>\n                        {this._renderTitleData(rowData, rowId)}\n                    </View>\n                    <View style={styles.row}>\n\n                        <Text style={[StylesObj.fontContainer, styles.listText]}>$ </Text>\n                        {this._renderAmountInput(rowData, rowId)}\n                    </View>\n\n                </View>\n                <View style={{ height: 2, flex: 1, backgroundColor: colors.backgroundGray }}/>\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    thumb: {\n        width: 35,\n        height: 35,\n    },\n    text: {\n        flex: 1,\n        paddingLeft: 10,\n        fontSize: 18,\n        color: colors.black\n    },\n    flexRow: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n    },\n    listText: {\n        color: colors.black\n    },\n    paddingVertical: {\n        paddingVertical: 5\n    },\n    lockImage: {\n        width: 15,\n        height: 20,\n    },\n    percentageInput: {\n        minWidth: 20,\n        paddingVertical: 0,\n        textAlign: 'center',\n    },\n    amountInput: {\n        minWidth: 20,\n        paddingVertical: 0,\n        textAlign: 'center',\n    },\n    titleInput: {\n        width: 100,\n        paddingVertical: 0,\n    },\n    inputUnderLine: {\n        // borderBottomColor: colors.blue,\n        // borderBottomWidth: 1,\n        color: colors.backgroundBlue\n    }\n});"]},"metadata":{},"sourceType":"module"}